{
	"id": "103e759b44eaeb294cc33f48e9529626",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.6",
	"solcLongVersion": "0.8.6+commit.11564f7e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Defi-project/V2/LendingPool_20230221.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n// import \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\r\n\r\n// import \"./LendingConfig.sol\";\r\n\r\ncontract LendingPoolV2 is ReentrancyGuard {\r\n    using SafeMath for uint;\r\n\r\n    //* 1. Declaring the variables\r\n    address deployer;\r\n    uint256 immutable INTEREST_RATE = 3;\r\n    uint256 immutable BORROW_RATE = 4;\r\n    uint256 borrowThreshold = 80;\r\n\r\n    //* 2. Declaring the mapping\r\n\r\n    // asset token => reserve qty\r\n    mapping (address => uint) public reserves;\r\n    // For iteration - Do we need this?\r\n    address[] reverseAssets; \r\n\r\n    // lenderAddress => tokenAddress => tokenQty\r\n    // mapping(address => UserAsset) lenderAssets;\r\n    mapping(address => mapping(address => uint)) lenderAssets;\r\n\r\n\r\n    //* 3. Declaring the structs\r\n\r\n    struct UserAsset {\r\n        address user;\r\n        address token;\r\n        uint256 lentQty;\r\n        uint256 borrowQty;\r\n        uint256 interestRate;\r\n        uint256 borrowRate;\r\n        uint256 lendStartTimeStamp;\r\n        uint256 borrowStartTimeStamp;\r\n    }\r\n\r\n    UserAsset[] public userAssets; // array of Struct UserAsset\r\n\r\n    struct ReservePool {\r\n        address token;\r\n        uint amount;\r\n        bool isfrozen;\r\n        bool isActive;\r\n    }\r\n    ReservePool[] reservePool; // array of ReversePool struct\r\n\r\n    //* 4. Creating constructor\r\n    constructor() {\r\n        deployer = msg.sender;\r\n        // INTEREST_RATE  = _interestRate; // Use logic like REWARDS staking\r\n        // BORROW_RATE = _borrowRate; // If interest rate is 3.5, pass 350, it will be converted to 3.5\r\n    }\r\n\r\n    function isTokenOwner(address _user, address _token) internal view returns(bool) {\r\n        uint256 userAssetLength = userAssets.length;\r\n        for (uint i = 0; i < userAssetLength; i++) {\r\n            if (userAssets[i].user == _user && userAssets[i].token == _token){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n   /************* Lender functions ************************/\r\n\r\n    function lend(address _token, uint256 _amount) public payable {\r\n        // IERC20 token = IERC20(_token); \r\n        // Asset storage asset = Asset({\r\n        address lender = msg.sender;\r\n\r\n        // transfer from the lender's wallet to DeFi app or SC \r\n        // IERC20(_token).transferFrom(lender,address(this),_amount);\r\n\r\n        // Add to lenders assets with amount - Add to userAssets struct\r\n\r\n        uint amount = lenderAssets[lender][_token] + _amount;\r\n        UserAsset memory userAsset = UserAsset({\r\n            user: lender,\r\n            token: _token,\r\n            lentQty: amount,\r\n            borrowQty: 0,\r\n            interestRate: INTEREST_RATE,\r\n            borrowRate: 0,\r\n            lendStartTimeStamp: block.timestamp,\r\n            borrowStartTimeStamp:0\r\n        });\r\n\r\n      \r\n        userAssets.push(userAsset);   // Push to the struct array\r\n        // add to lender asset list\r\n        lenderAssets[lender][_token] = amount; //Is this really necessary?\r\n        // Add to Lending Pool a.k.a reserves\r\n        // If using a struct, use a function getCurrentReserve() and add to the struct, that increases gas cost\r\n        reserves[_token] += _amount; //TODO: to use a struct or a mapping?\r\n        // Add to reserve assets for enabling iteration\r\n        reverseAssets.push(_token);\r\n    }\r\n\r\n\r\n}\r\n\r\n// for (uint i = 0; i < lenderAssetList[msg.sender].length; i++) {\r\n//     if (lenderAssetList[msg.sender][i] == _token){\r\n//         return true;\r\n//     }\r\n// }\r\n\r\n// 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4  - owner\r\n\r\n// 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 - lender\r\n\r\n// Chainlink - https://docs.chain.link/data-feeds/price-feeds/addresses/\r\n\r\n// 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e - ETH - 3\r\n// 0x0d79df66BE487753B02D015Fb622DED7f0E9798d - DAI - 33\r\n// 0xAb5c49580294Aff77670F839ea425f5b78ab3Ae7 - USDC - 13\r\n// 0x48731cF7e84dc94C5f84577882c14Be11a5B7456 - LINK - 23\r\n\r\n/*\r\nBTC / USD 0xA39434A63A52E749F02807ae27335515BA4b07F7 - 8\r\nDAI / USD 0x0d79df66BE487753B02D015Fb622DED7f0E9798d- 8\r\nETH / USD 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e- 8\r\nLINK / USD 0x48731cF7e84dc94C5f84577882c14Be11a5B7456 - 8\r\nUSDC / USD 0xAb5c49580294Aff77670F839ea425f5b78ab3Ae7- 8\r\n*/"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122082131568d64f3cbd009470b339d6dc912dac925e0ac514861d83e5e764b8df3b64736f6c63430008060033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082131568d64f3cbd009470b339d6dc912dac925e0ac514861d83e5e764b8df3b64736f6c63430008060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SGT ISZERO PUSH9 0xD64F3CBD009470B339 0xD6 0xDC SWAP2 0x2D 0xAC SWAP3 0x5E EXP 0xC5 EQ DUP7 SAR DUP4 0xE5 0xE7 PUSH5 0xB8DF3B6473 PUSH16 0x6C634300080600330000000000000000 ",
							"sourceMap": "424:971:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082131568d64f3cbd009470b339d6dc912dac925e0ac514861d83e5e764b8df3b64736f6c63430008060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SGT ISZERO PUSH9 0xD64F3CBD009470B339 0xD6 0xDC SWAP2 0x2D 0xAC SWAP3 0x5E EXP 0xC5 EQ DUP7 SAR DUP4 0xE5 0xE7 PUSH5 0xB8DF3B6473 PUSH16 0x6C634300080600330000000000000000 ",
							"sourceMap": "424:971:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082131568d64f3cbd009470b339d6dc912dac925e0ac514861d83e5e764b8df3b64736f6c63430008060033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207b029cbeebf74a7f6cf1173e871b18894a3f2ee7cab292f5711f1ee6b7ab8ca964736f6c63430008060033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b029cbeebf74a7f6cf1173e871b18894a3f2ee7cab292f5711f1ee6b7ab8ca964736f6c63430008060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x29CBEEBF74A7F6CF1173E871B18894A3F2EE7CAB292F5711F1EE6B7 0xAB DUP13 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b029cbeebf74a7f6cf1173e871b18894a3f2ee7cab292f5711f1ee6b7ab8ca964736f6c63430008060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x29CBEEBF74A7F6CF1173E871B18894A3F2EE7CAB292F5711F1EE6B7 0xAB DUP13 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b029cbeebf74a7f6cf1173e871b18894a3f2ee7cab292f5711f1ee6b7ab8ca964736f6c63430008060033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Defi-project/V2/LendingPool_20230221.sol": {
				"LendingPoolV2": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "lend",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "reserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userAssets",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "lentQty",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrowQty",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lendStartTimeStamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrowStartTimeStamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Defi-project/V2/LendingPool_20230221.sol\":454:3677  contract LendingPoolV2 is ReentrancyGuard {\r... */\n  mstore(0x40, 0xc0)\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":628:629  3 */\n  0x03\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":594:629  uint256 immutable INTEREST_RATE = 3 */\n  0x80\n  swap1\n  dup2\n  mstore\n  pop\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":668:669  4 */\n  0x04\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":636:669  uint256 immutable BORROW_RATE = 4 */\n  0xa0\n  swap1\n  dup2\n  mstore\n  pop\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":702:704  80 */\n  0x50\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":676:704  uint256 borrowThreshold = 80 */\n  0x02\n  sstore\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":1674:1911  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":1710:1720  msg.sender */\n  caller\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":1699:1707  deployer */\n  0x01\n  0x00\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":1699:1720  deployer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Defi-project/V2/LendingPool_20230221.sol\":454:3677  contract LendingPoolV2 is ReentrancyGuard {\r... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0f1bcf290b66a2cfed5f23463bc63e98c2b29d8093b3c4b39be593d60dfd3630\")\n  0x00\n  assignImmutable(\"0xf63dd2532f4bb354c128345aafbf8d088267c0b2cdfe137c5864fa441df714ed\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":454:3677  contract LendingPoolV2 is ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4093551d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa2fb342d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd66bd524\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":1382:1411  UserAsset[] public userAssets */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2347:3670  function lend(address _token, uint256 _amount) public payable {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":784:825  mapping (address => uint) public reserves */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":1382:1411  UserAsset[] public userAssets */\n    tag_9:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      pop\n      dup9\n      jump\t// out\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2347:3670  function lend(address _token, uint256 _amount) public payable {\r... */\n    tag_15:\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2506:2520  address lender */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2523:2533  msg.sender */\n      caller\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2506:2533  address lender = msg.sender */\n      swap1\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2759:2770  uint amount */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2804:2811  _amount */\n      dup3\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2773:2785  lenderAssets */\n      0x05\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2773:2793  lenderAssets[lender] */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2786:2792  lender */\n      dup5\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2773:2793  lenderAssets[lender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2773:2801  lenderAssets[lender][_token] */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2794:2800  _token */\n      dup7\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2773:2801  lenderAssets[lender][_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2773:2811  lenderAssets[lender][_token] + _amount */\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2759:2811  uint amount = lenderAssets[lender][_token] + _amount */\n      swap1\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2822:2848  UserAsset memory userAsset */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2882:2888  lender */\n      dup5\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2910:2916  _token */\n      dup7\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2940:2946  amount */\n      dup4\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2972:2973  0 */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3002:3015  INTEREST_RATE */\n      immutable(\"0xf63dd2532f4bb354c128345aafbf8d088267c0b2cdfe137c5864fa441df714ed\")\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3042:3043  0 */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3078:3093  block.timestamp */\n      timestamp\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3129:3130  0 */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2851:3142  UserAsset({\r... */\n      dup2\n      mstore\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2822:3142  UserAsset memory userAsset = UserAsset({\r... */\n      swap1\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3163:3173  userAssets */\n      0x06\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3179:3188  userAsset */\n      dup2\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3163:3189  userAssets.push(userAsset) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      pop\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3298:3304  amount */\n      dup2\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3267:3279  lenderAssets */\n      0x05\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3267:3287  lenderAssets[lender] */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3280:3286  lender */\n      dup6\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3267:3287  lenderAssets[lender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3267:3295  lenderAssets[lender][_token] */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3288:3294  _token */\n      dup8\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3267:3295  lenderAssets[lender][_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3267:3304  lenderAssets[lender][_token] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3523:3530  _amount */\n      dup4\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3503:3511  reserves */\n      0x03\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3503:3519  reserves[_token] */\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3512:3518  _token */\n      dup8\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3503:3519  reserves[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3503:3530  reserves[_token] += _amount */\n      dup3\n      dup3\n      sload\n      tag_29\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_29:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3636:3649  reverseAssets */\n      0x04\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3655:3661  _token */\n      dup6\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":3636:3662  reverseAssets.push(_token) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2409:3670  {\r... */\n      pop\n      pop\n      pop\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":2347:3670  function lend(address _token, uint256 _amount) public payable {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Defi-project/V2/LendingPool_20230221.sol\":784:825  mapping (address => uint) public reserves */\n    tag_20:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_32:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_34\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_36:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_38\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_19:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":373:375   */\n    tag_41:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_44\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_32\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":363:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_14:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:727   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_47\n      tag_43\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":725:727   */\n    tag_46:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_48\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_32\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_49\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_36\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":715:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1441   */\n    tag_8:\n        /* \"#utility.yul\":1171:1177   */\n      0x00\n        /* \"#utility.yul\":1220:1222   */\n      0x20\n        /* \"#utility.yul\":1208:1217   */\n      dup3\n        /* \"#utility.yul\":1199:1206   */\n      dup5\n        /* \"#utility.yul\":1195:1218   */\n      sub\n        /* \"#utility.yul\":1191:1223   */\n      slt\n        /* \"#utility.yul\":1188:1190   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1226:1305   */\n      tag_52\n      tag_43\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1188:1190   */\n    tag_51:\n        /* \"#utility.yul\":1346:1347   */\n      0x00\n        /* \"#utility.yul\":1371:1424   */\n      tag_53\n        /* \"#utility.yul\":1416:1423   */\n      dup5\n        /* \"#utility.yul\":1407:1413   */\n      dup3\n        /* \"#utility.yul\":1396:1405   */\n      dup6\n        /* \"#utility.yul\":1392:1414   */\n      add\n        /* \"#utility.yul\":1371:1424   */\n      tag_36\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1361:1424   */\n      swap2\n      pop\n        /* \"#utility.yul\":1317:1434   */\n      pop\n        /* \"#utility.yul\":1178:1441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:1565   */\n    tag_54:\n        /* \"#utility.yul\":1534:1558   */\n      tag_56\n        /* \"#utility.yul\":1552:1557   */\n      dup2\n        /* \"#utility.yul\":1534:1558   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1529:1532   */\n      dup3\n        /* \"#utility.yul\":1522:1559   */\n      mstore\n        /* \"#utility.yul\":1512:1565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1571:1689   */\n    tag_58:\n        /* \"#utility.yul\":1658:1682   */\n      tag_60\n        /* \"#utility.yul\":1676:1681   */\n      dup2\n        /* \"#utility.yul\":1658:1682   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1653:1656   */\n      dup3\n        /* \"#utility.yul\":1646:1683   */\n      mstore\n        /* \"#utility.yul\":1636:1689   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1695:2692   */\n    tag_11:\n        /* \"#utility.yul\":1984:1988   */\n      0x00\n        /* \"#utility.yul\":2022:2025   */\n      0x0100\n        /* \"#utility.yul\":2011:2020   */\n      dup3\n        /* \"#utility.yul\":2007:2026   */\n      add\n        /* \"#utility.yul\":1999:2026   */\n      swap1\n      pop\n        /* \"#utility.yul\":2036:2107   */\n      tag_63\n        /* \"#utility.yul\":2104:2105   */\n      0x00\n        /* \"#utility.yul\":2093:2102   */\n      dup4\n        /* \"#utility.yul\":2089:2106   */\n      add\n        /* \"#utility.yul\":2080:2086   */\n      dup12\n        /* \"#utility.yul\":2036:2107   */\n      tag_54\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2117:2189   */\n      tag_64\n        /* \"#utility.yul\":2185:2187   */\n      0x20\n        /* \"#utility.yul\":2174:2183   */\n      dup4\n        /* \"#utility.yul\":2170:2188   */\n      add\n        /* \"#utility.yul\":2161:2167   */\n      dup11\n        /* \"#utility.yul\":2117:2189   */\n      tag_54\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2199:2271   */\n      tag_65\n        /* \"#utility.yul\":2267:2269   */\n      0x40\n        /* \"#utility.yul\":2256:2265   */\n      dup4\n        /* \"#utility.yul\":2252:2270   */\n      add\n        /* \"#utility.yul\":2243:2249   */\n      dup10\n        /* \"#utility.yul\":2199:2271   */\n      tag_58\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2281:2353   */\n      tag_66\n        /* \"#utility.yul\":2349:2351   */\n      0x60\n        /* \"#utility.yul\":2338:2347   */\n      dup4\n        /* \"#utility.yul\":2334:2352   */\n      add\n        /* \"#utility.yul\":2325:2331   */\n      dup9\n        /* \"#utility.yul\":2281:2353   */\n      tag_58\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2363:2436   */\n      tag_67\n        /* \"#utility.yul\":2431:2434   */\n      0x80\n        /* \"#utility.yul\":2420:2429   */\n      dup4\n        /* \"#utility.yul\":2416:2435   */\n      add\n        /* \"#utility.yul\":2407:2413   */\n      dup8\n        /* \"#utility.yul\":2363:2436   */\n      tag_58\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2446:2519   */\n      tag_68\n        /* \"#utility.yul\":2514:2517   */\n      0xa0\n        /* \"#utility.yul\":2503:2512   */\n      dup4\n        /* \"#utility.yul\":2499:2518   */\n      add\n        /* \"#utility.yul\":2490:2496   */\n      dup7\n        /* \"#utility.yul\":2446:2519   */\n      tag_58\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2529:2602   */\n      tag_69\n        /* \"#utility.yul\":2597:2600   */\n      0xc0\n        /* \"#utility.yul\":2586:2595   */\n      dup4\n        /* \"#utility.yul\":2582:2601   */\n      add\n        /* \"#utility.yul\":2573:2579   */\n      dup6\n        /* \"#utility.yul\":2529:2602   */\n      tag_58\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2612:2685   */\n      tag_70\n        /* \"#utility.yul\":2680:2683   */\n      0xe0\n        /* \"#utility.yul\":2669:2678   */\n      dup4\n        /* \"#utility.yul\":2665:2684   */\n      add\n        /* \"#utility.yul\":2656:2662   */\n      dup5\n        /* \"#utility.yul\":2612:2685   */\n      tag_58\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1989:2692   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2698:2920   */\n    tag_22:\n        /* \"#utility.yul\":2791:2795   */\n      0x00\n        /* \"#utility.yul\":2829:2831   */\n      0x20\n        /* \"#utility.yul\":2818:2827   */\n      dup3\n        /* \"#utility.yul\":2814:2832   */\n      add\n        /* \"#utility.yul\":2806:2832   */\n      swap1\n      pop\n        /* \"#utility.yul\":2842:2913   */\n      tag_72\n        /* \"#utility.yul\":2910:2911   */\n      0x00\n        /* \"#utility.yul\":2899:2908   */\n      dup4\n        /* \"#utility.yul\":2895:2912   */\n      add\n        /* \"#utility.yul\":2886:2892   */\n      dup5\n        /* \"#utility.yul\":2842:2913   */\n      tag_58\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2796:2920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3007:3312   */\n    tag_27:\n        /* \"#utility.yul\":3047:3050   */\n      0x00\n        /* \"#utility.yul\":3066:3086   */\n      tag_76\n        /* \"#utility.yul\":3084:3085   */\n      dup3\n        /* \"#utility.yul\":3066:3086   */\n      tag_61\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3061:3086   */\n      swap2\n      pop\n        /* \"#utility.yul\":3100:3120   */\n      tag_77\n        /* \"#utility.yul\":3118:3119   */\n      dup4\n        /* \"#utility.yul\":3100:3120   */\n      tag_61\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":3095:3120   */\n      swap3\n      pop\n        /* \"#utility.yul\":3254:3255   */\n      dup3\n        /* \"#utility.yul\":3186:3252   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3182:3256   */\n      sub\n        /* \"#utility.yul\":3179:3180   */\n      dup3\n        /* \"#utility.yul\":3176:3257   */\n      gt\n        /* \"#utility.yul\":3173:3175   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":3260:3278   */\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3173:3175   */\n    tag_78:\n        /* \"#utility.yul\":3304:3305   */\n      dup3\n        /* \"#utility.yul\":3301:3302   */\n      dup3\n        /* \"#utility.yul\":3297:3306   */\n      add\n        /* \"#utility.yul\":3290:3306   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3318:3414   */\n    tag_57:\n        /* \"#utility.yul\":3355:3362   */\n      0x00\n        /* \"#utility.yul\":3384:3408   */\n      tag_82\n        /* \"#utility.yul\":3402:3407   */\n      dup3\n        /* \"#utility.yul\":3384:3408   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3373:3408   */\n      swap1\n      pop\n        /* \"#utility.yul\":3363:3414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3420:3546   */\n    tag_83:\n        /* \"#utility.yul\":3457:3464   */\n      0x00\n        /* \"#utility.yul\":3497:3539   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3490:3495   */\n      dup3\n        /* \"#utility.yul\":3486:3540   */\n      and\n        /* \"#utility.yul\":3475:3540   */\n      swap1\n      pop\n        /* \"#utility.yul\":3465:3546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3552:3629   */\n    tag_61:\n        /* \"#utility.yul\":3589:3596   */\n      0x00\n        /* \"#utility.yul\":3618:3623   */\n      dup2\n        /* \"#utility.yul\":3607:3623   */\n      swap1\n      pop\n        /* \"#utility.yul\":3597:3629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3635:3815   */\n    tag_80:\n        /* \"#utility.yul\":3683:3760   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3673:3761   */\n      mstore\n        /* \"#utility.yul\":3780:3784   */\n      0x11\n        /* \"#utility.yul\":3777:3778   */\n      0x04\n        /* \"#utility.yul\":3770:3785   */\n      mstore\n        /* \"#utility.yul\":3804:3808   */\n      0x24\n        /* \"#utility.yul\":3801:3802   */\n      0x00\n        /* \"#utility.yul\":3794:3809   */\n      revert\n        /* \"#utility.yul\":3944:4061   */\n    tag_43:\n        /* \"#utility.yul\":4053:4054   */\n      0x00\n        /* \"#utility.yul\":4050:4051   */\n      dup1\n        /* \"#utility.yul\":4043:4055   */\n      revert\n        /* \"#utility.yul\":4067:4189   */\n    tag_35:\n        /* \"#utility.yul\":4140:4164   */\n      tag_91\n        /* \"#utility.yul\":4158:4163   */\n      dup2\n        /* \"#utility.yul\":4140:4164   */\n      tag_57\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":4133:4138   */\n      dup2\n        /* \"#utility.yul\":4130:4165   */\n      eq\n        /* \"#utility.yul\":4120:4122   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":4179:4180   */\n      0x00\n        /* \"#utility.yul\":4176:4177   */\n      dup1\n        /* \"#utility.yul\":4169:4181   */\n      revert\n        /* \"#utility.yul\":4120:4122   */\n    tag_92:\n        /* \"#utility.yul\":4110:4189   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4195:4317   */\n    tag_39:\n        /* \"#utility.yul\":4268:4292   */\n      tag_94\n        /* \"#utility.yul\":4286:4291   */\n      dup2\n        /* \"#utility.yul\":4268:4292   */\n      tag_61\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":4261:4266   */\n      dup2\n        /* \"#utility.yul\":4258:4293   */\n      eq\n        /* \"#utility.yul\":4248:4250   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":4307:4308   */\n      0x00\n        /* \"#utility.yul\":4304:4305   */\n      dup1\n        /* \"#utility.yul\":4297:4309   */\n      revert\n        /* \"#utility.yul\":4248:4250   */\n    tag_95:\n        /* \"#utility.yul\":4238:4317   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220431b41622dc63f613a5d967b900ef2188e48190617cf9a8971560061513855ae64736f6c63430008060033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_595": {
									"entryPoint": null,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60c06040526003608090815250600460a090815250605060025534801561002557600080fd5b50600160008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060805160a05161078261009160003960005050600061025401526107826000f3fe6080604052600436106100345760003560e01c80634093551d14610039578063a2fb342d1461007d578063d66bd52414610099575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610574565b6100d6565b6040516100749897969594939291906105bf565b60405180910390f35b61009760048036038101906100929190610534565b61016e565b005b3480156100a557600080fd5b506100c060048036038101906100bb9190610507565b6104c5565b6040516100cd919061063d565b60405180910390f35b600681815481106100e657600080fd5b90600052602060002090600802016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060154908060070154905088565b6000339050600082600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101fd9190610658565b905060006040518061010001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600081526020017f000000000000000000000000000000000000000000000000000000000000000081526020016000815260200142815260200160008152509050600681908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155505081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104549190610658565b925050819055506004859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60036020528060005260406000206000915090505481565b6000813590506104ec8161071e565b92915050565b60008135905061050181610735565b92915050565b60006020828403121561051d5761051c610719565b5b600061052b848285016104dd565b91505092915050565b6000806040838503121561054b5761054a610719565b5b6000610559858286016104dd565b925050602061056a858286016104f2565b9150509250929050565b60006020828403121561058a57610589610719565b5b6000610598848285016104f2565b91505092915050565b6105aa816106ae565b82525050565b6105b9816106e0565b82525050565b6000610100820190506105d5600083018b6105a1565b6105e2602083018a6105a1565b6105ef60408301896105b0565b6105fc60608301886105b0565b61060960808301876105b0565b61061660a08301866105b0565b61062360c08301856105b0565b61063060e08301846105b0565b9998505050505050505050565b600060208201905061065260008301846105b0565b92915050565b6000610663826106e0565b915061066e836106e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106a3576106a26106ea565b5b828201905092915050565b60006106b9826106c0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610727816106ae565b811461073257600080fd5b50565b61073e816106e0565b811461074957600080fd5b5056fea2646970667358221220431b41622dc63f613a5d967b900ef2188e48190617cf9a8971560061513855ae64736f6c63430008060033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x3 PUSH1 0x80 SWAP1 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0xA0 SWAP1 DUP2 MSTORE POP PUSH1 0x50 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x782 PUSH2 0x91 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 PUSH2 0x254 ADD MSTORE PUSH2 0x782 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4093551D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xA2FB342D EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xD66BD524 EQ PUSH2 0x99 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x574 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x16E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x658 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE POP POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x658 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4EC DUP2 PUSH2 0x71E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x501 DUP2 PUSH2 0x735 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51D JUMPI PUSH2 0x51C PUSH2 0x719 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP5 DUP3 DUP6 ADD PUSH2 0x4DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0x719 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP6 DUP3 DUP7 ADD PUSH2 0x4DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x56A DUP6 DUP3 DUP7 ADD PUSH2 0x4F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58A JUMPI PUSH2 0x589 PUSH2 0x719 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x598 DUP5 DUP3 DUP6 ADD PUSH2 0x4F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0x6AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5B9 DUP2 PUSH2 0x6E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x5D5 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5E2 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5EF PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x5FC PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x609 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x616 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x623 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x630 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x5B0 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x652 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x66E DUP4 PUSH2 0x6E0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x6EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 DUP3 PUSH2 0x6C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP2 PUSH2 0x6AE JUMP JUMPDEST DUP2 EQ PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x6E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SHL COINBASE PUSH3 0x2DC63F PUSH2 0x3A5D SWAP7 PUSH28 0x900EF2188E48190617CF9A8971560061513855AE64736F6C63430008 MOD STOP CALLER ",
							"sourceMap": "454:3223:4:-:0;;;628:1;594:35;;;;;668:1;636:33;;;;;702:2;676:28;;1674:237;;;;;;;;;;1716:1:0;1821:7;:22;;;;1710:10:4;1699:8;;:21;;;;;;;;;;;;;;;;;;454:3223;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@lend_705": {
									"entryPoint": 366,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@reserves_543": {
									"entryPoint": 1221,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userAssets_573": {
									"entryPoint": 214,
									"id": 573,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4320:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:5",
														"type": ""
													}
												],
												"src": "152:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:5"
															},
															"nodeType": "YulIf",
															"src": "373:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:5",
														"type": ""
													}
												],
												"src": "297:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:5"
															},
															"nodeType": "YulIf",
															"src": "725:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:5",
														"type": ""
													}
												],
												"src": "632:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1178:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1224:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1226:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1226:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1199:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1208:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1195:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1195:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1220:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1191:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:32:5"
															},
															"nodeType": "YulIf",
															"src": "1188:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1317:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1332:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1336:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1361:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1396:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1407:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1392:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1392:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1371:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1361:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1148:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1159:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1171:6:5",
														"type": ""
													}
												],
												"src": "1112:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1512:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1529:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1552:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1534:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1522:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1522:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1500:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1507:3:5",
														"type": ""
													}
												],
												"src": "1447:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1636:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1653:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1676:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1658:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1658:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1624:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1631:3:5",
														"type": ""
													}
												],
												"src": "1571:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1989:703:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1999:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2007:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2007:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1999:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2080:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2093:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2104:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2089:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2089:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2036:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2036:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2161:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2174:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2185:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2117:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2117:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2243:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2256:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2267:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2252:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2252:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2199:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2199:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2325:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2338:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2349:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2334:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2334:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2281:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2281:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2420:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2431:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2416:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2416:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2363:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:73:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2363:73:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "2490:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2503:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2514:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2499:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2446:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:73:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2446:73:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "2573:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2597:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2582:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2582:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2529:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:73:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2529:73:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "2656:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2669:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2680:3:5",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2665:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2665:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2612:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:73:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:73:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1905:9:5",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "1917:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1925:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1933:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1941:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1949:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1957:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1965:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1973:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1984:4:5",
														"type": ""
													}
												],
												"src": "1695:997:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2796:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2806:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2818:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2829:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2814:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2814:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2806:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2886:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2899:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2910:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2895:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2895:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2842:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2842:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2768:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2780:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2791:4:5",
														"type": ""
													}
												],
												"src": "2698:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2966:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2976:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2986:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2959:6:5",
														"type": ""
													}
												],
												"src": "2926:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3051:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3061:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3084:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3066:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3061:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3095:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3118:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3100:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3095:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3258:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3260:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3260:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3260:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3179:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3186:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3254:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3176:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:81:5"
															},
															"nodeType": "YulIf",
															"src": "3173:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3290:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3301:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3304:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3290:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3038:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3041:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3047:3:5",
														"type": ""
													}
												],
												"src": "3007:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3363:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3373:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3402:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3384:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3373:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3345:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3355:7:5",
														"type": ""
													}
												],
												"src": "3318:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3490:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3497:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3486:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3475:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3447:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3457:7:5",
														"type": ""
													}
												],
												"src": "3420:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3597:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3607:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3618:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3607:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3579:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3589:7:5",
														"type": ""
													}
												],
												"src": "3552:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3663:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3680:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3673:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3673:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3673:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3777:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3780:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3770:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3770:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3794:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3794:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3635:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3910:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3927:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3930:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3920:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3821:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4033:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4050:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4053:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4043:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4043:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4043:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3944:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4110:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4167:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4176:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4179:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4169:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4169:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4169:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4133:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4158:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4140:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4140:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4130:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:43:5"
															},
															"nodeType": "YulIf",
															"src": "4120:2:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4103:5:5",
														"type": ""
													}
												],
												"src": "4067:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4238:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4295:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4304:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4307:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4297:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4297:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4297:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4261:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4286:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4268:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4268:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4258:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4251:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:43:5"
															},
															"nodeType": "YulIf",
															"src": "4248:2:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4231:5:5",
														"type": ""
													}
												],
												"src": "4195:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"533": [
									{
										"length": 32,
										"start": 596
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80634093551d14610039578063a2fb342d1461007d578063d66bd52414610099575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610574565b6100d6565b6040516100749897969594939291906105bf565b60405180910390f35b61009760048036038101906100929190610534565b61016e565b005b3480156100a557600080fd5b506100c060048036038101906100bb9190610507565b6104c5565b6040516100cd919061063d565b60405180910390f35b600681815481106100e657600080fd5b90600052602060002090600802016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060154908060070154905088565b6000339050600082600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101fd9190610658565b905060006040518061010001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600081526020017f000000000000000000000000000000000000000000000000000000000000000081526020016000815260200142815260200160008152509050600681908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155505081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104549190610658565b925050819055506004859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60036020528060005260406000206000915090505481565b6000813590506104ec8161071e565b92915050565b60008135905061050181610735565b92915050565b60006020828403121561051d5761051c610719565b5b600061052b848285016104dd565b91505092915050565b6000806040838503121561054b5761054a610719565b5b6000610559858286016104dd565b925050602061056a858286016104f2565b9150509250929050565b60006020828403121561058a57610589610719565b5b6000610598848285016104f2565b91505092915050565b6105aa816106ae565b82525050565b6105b9816106e0565b82525050565b6000610100820190506105d5600083018b6105a1565b6105e2602083018a6105a1565b6105ef60408301896105b0565b6105fc60608301886105b0565b61060960808301876105b0565b61061660a08301866105b0565b61062360c08301856105b0565b61063060e08301846105b0565b9998505050505050505050565b600060208201905061065260008301846105b0565b92915050565b6000610663826106e0565b915061066e836106e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106a3576106a26106ea565b5b828201905092915050565b60006106b9826106c0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610727816106ae565b811461073257600080fd5b50565b61073e816106e0565b811461074957600080fd5b5056fea2646970667358221220431b41622dc63f613a5d967b900ef2188e48190617cf9a8971560061513855ae64736f6c63430008060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4093551D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xA2FB342D EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xD66BD524 EQ PUSH2 0x99 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x574 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x16E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x658 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE POP POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x658 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4EC DUP2 PUSH2 0x71E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x501 DUP2 PUSH2 0x735 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51D JUMPI PUSH2 0x51C PUSH2 0x719 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP5 DUP3 DUP6 ADD PUSH2 0x4DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0x719 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP6 DUP3 DUP7 ADD PUSH2 0x4DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x56A DUP6 DUP3 DUP7 ADD PUSH2 0x4F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58A JUMPI PUSH2 0x589 PUSH2 0x719 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x598 DUP5 DUP3 DUP6 ADD PUSH2 0x4F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0x6AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5B9 DUP2 PUSH2 0x6E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x5D5 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5E2 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5EF PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x5FC PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x609 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x616 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x623 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x630 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x5B0 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x652 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x66E DUP4 PUSH2 0x6E0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x6EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 DUP3 PUSH2 0x6C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP2 PUSH2 0x6AE JUMP JUMPDEST DUP2 EQ PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x6E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SHL COINBASE PUSH3 0x2DC63F PUSH2 0x3A5D SWAP7 PUSH28 0x900EF2188E48190617CF9A8971560061513855AE64736F6C63430008 MOD STOP CALLER ",
							"sourceMap": "454:3223:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1382:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2347:1323;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;784:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1382:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2347:1323::-;2506:14;2523:10;2506:27;;2759:11;2804:7;2773:12;:20;2786:6;2773:20;;;;;;;;;;;;;;;:28;2794:6;2773:28;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;2759:52;;2822:26;2851:291;;;;;;;;2882:6;2851:291;;;;;;2910:6;2851:291;;;;;;2940:6;2851:291;;;;2972:1;2851:291;;;;3002:13;2851:291;;;;3042:1;2851:291;;;;3078:15;2851:291;;;;3129:1;2851:291;;;2822:320;;3163:10;3179:9;3163:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:6;3267:12;:20;3280:6;3267:20;;;;;;;;;;;;;;;:28;3288:6;3267:28;;;;;;;;;;;;;;;:37;;;;3523:7;3503:8;:16;3512:6;3503:16;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;3636:13;3655:6;3636:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:1261;;;2347:1323;;:::o;784:41::-;;;;;;;;;;;;;;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;411:79;;:::i;:::-;373:2;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;363:263;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:2;;;763:79;;:::i;:::-;725:2;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;715:391;;;;;:::o;1112:329::-;1171:6;1220:2;1208:9;1199:7;1195:23;1191:32;1188:2;;;1226:79;;:::i;:::-;1188:2;1346:1;1371:53;1416:7;1407:6;1396:9;1392:22;1371:53;:::i;:::-;1361:63;;1317:117;1178:263;;;;:::o;1447:118::-;1534:24;1552:5;1534:24;:::i;:::-;1529:3;1522:37;1512:53;;:::o;1571:118::-;1658:24;1676:5;1658:24;:::i;:::-;1653:3;1646:37;1636:53;;:::o;1695:997::-;1984:4;2022:3;2011:9;2007:19;1999:27;;2036:71;2104:1;2093:9;2089:17;2080:6;2036:71;:::i;:::-;2117:72;2185:2;2174:9;2170:18;2161:6;2117:72;:::i;:::-;2199;2267:2;2256:9;2252:18;2243:6;2199:72;:::i;:::-;2281;2349:2;2338:9;2334:18;2325:6;2281:72;:::i;:::-;2363:73;2431:3;2420:9;2416:19;2407:6;2363:73;:::i;:::-;2446;2514:3;2503:9;2499:19;2490:6;2446:73;:::i;:::-;2529;2597:3;2586:9;2582:19;2573:6;2529:73;:::i;:::-;2612;2680:3;2669:9;2665:19;2656:6;2612:73;:::i;:::-;1989:703;;;;;;;;;;;:::o;2698:222::-;2791:4;2829:2;2818:9;2814:18;2806:26;;2842:71;2910:1;2899:9;2895:17;2886:6;2842:71;:::i;:::-;2796:124;;;;:::o;3007:305::-;3047:3;3066:20;3084:1;3066:20;:::i;:::-;3061:25;;3100:20;3118:1;3100:20;:::i;:::-;3095:25;;3254:1;3186:66;3182:74;3179:1;3176:81;3173:2;;;3260:18;;:::i;:::-;3173:2;3304:1;3301;3297:9;3290:16;;3051:261;;;;:::o;3318:96::-;3355:7;3384:24;3402:5;3384:24;:::i;:::-;3373:35;;3363:51;;;:::o;3420:126::-;3457:7;3497:42;3490:5;3486:54;3475:65;;3465:81;;;:::o;3552:77::-;3589:7;3618:5;3607:16;;3597:32;;;:::o;3635:180::-;3683:77;3680:1;3673:88;3780:4;3777:1;3770:15;3804:4;3801:1;3794:15;3944:117;4053:1;4050;4043:12;4067:122;4140:24;4158:5;4140:24;:::i;:::-;4133:5;4130:35;4120:2;;4179:1;4176;4169:12;4120:2;4110:79;:::o;4195:122::-;4268:24;4286:5;4268:24;:::i;:::-;4261:5;4258:35;4248:2;;4307:1;4304;4297:12;4248:2;4238:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "384400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"lend(address,uint256)": "infinite",
								"reserves(address)": "2836",
								"userAssets(uint256)": "infinite"
							},
							"internal": {
								"isTokenOwner(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 628,
									"end": 629,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 594,
									"end": 629,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 594,
									"end": 629,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 629,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 629,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 594,
									"end": 629,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 668,
									"end": 669,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 636,
									"end": 669,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 636,
									"end": 669,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 669,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 669,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 669,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 702,
									"end": 704,
									"name": "PUSH",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 676,
									"end": 704,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 676,
									"end": 704,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1674,
									"end": 1911,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1720,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1699,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "536"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "533"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 3677,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220431b41622dc63f613a5d967b900ef2188e48190617cf9a8971560061513855ae64736f6c63430008060033",
									".code": [
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "4093551D"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "A2FB342D"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "D66BD524"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 454,
											"end": 3677,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2533,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2801,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2822,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2916,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3015,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "533"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 3142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2822,
											"end": 3142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2822,
											"end": 3142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3179,
											"end": 3188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3304,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3511,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3655,
											"end": 3661,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 3670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 3670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 3670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 3670,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 626,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 363,
											"end": 626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 626,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 725,
											"end": 727,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 725,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 725,
											"end": 727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 727,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 725,
											"end": 727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 715,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 715,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 715,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 715,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 715,
											"end": 1106,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1206,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1223,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1441,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1441,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1552,
											"end": 1557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1534,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1565,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1571,
											"end": 1689,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1571,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1676,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1695,
											"end": 2692,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1695,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2104,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2086,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2036,
											"end": 2107,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2107,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2036,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2183,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2167,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2117,
											"end": 2189,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2117,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2117,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2249,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2199,
											"end": 2271,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2271,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2199,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2349,
											"end": 2351,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2281,
											"end": 2353,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2281,
											"end": 2353,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2281,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2431,
											"end": 2434,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2420,
											"end": 2429,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2363,
											"end": 2436,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2436,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2363,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2503,
											"end": 2512,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2446,
											"end": 2519,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2446,
											"end": 2519,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2446,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2529,
											"end": 2602,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2529,
											"end": 2602,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2529,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2680,
											"end": 2683,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2669,
											"end": 2678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2662,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2612,
											"end": 2685,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2612,
											"end": 2685,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2612,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2692,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2698,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2698,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2831,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2892,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2842,
											"end": 2913,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2913,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2842,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2920,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3007,
											"end": 3312,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3007,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3066,
											"end": 3086,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3066,
											"end": 3086,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3066,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3118,
											"end": 3119,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3100,
											"end": 3120,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3100,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3120,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3186,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3182,
											"end": 3256,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3257,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3312,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3312,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3312,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3318,
											"end": 3414,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3318,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3355,
											"end": 3362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3384,
											"end": 3408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3384,
											"end": 3408,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3384,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3414,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3414,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3414,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3420,
											"end": 3546,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3420,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3539,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3540,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3552,
											"end": 3629,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3552,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3629,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3635,
											"end": 3815,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3635,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3760,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3761,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3784,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3770,
											"end": 3785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3809,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 4061,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3944,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4043,
											"end": 4055,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4189,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4067,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4158,
											"end": 4163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4120,
											"end": 4122,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4181,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4122,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4120,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4189,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4195,
											"end": 4317,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4195,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4286,
											"end": 4291,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4261,
											"end": 4266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4293,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4317,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"lend(address,uint256)": "a2fb342d",
							"reserves(address)": "d66bd524",
							"userAssets(uint256)": "4093551d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lentQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lendStartTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowStartTimeStamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Defi-project/V2/LendingPool_20230221.sol\":\"LendingPoolV2\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Defi-project/V2/LendingPool_20230221.sol\":{\"keccak256\":\"0x25cca481e4950786294a34d39b2f9578c939dc50beb3d2b5f25459ca00b144ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fb817343e22413a485ce6a25be40c0e5736a3b1d2f5a2be7f055d48cad828a2\",\"dweb:/ipfs/QmbUoyjKWn7PbJEBhzWGTnhHYEdWf5ocTNCajJ4J1Uzf1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 530,
								"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
								"label": "deployer",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 539,
								"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
								"label": "borrowThreshold",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 543,
								"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
								"label": "reserves",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 546,
								"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
								"label": "reverseAssets",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 552,
								"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
								"label": "lenderAssets",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 573,
								"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
								"label": "userAssets",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(UserAsset)569_storage)dyn_storage"
							},
							{
								"astId": 586,
								"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
								"label": "reservePool",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(ReservePool)582_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(ReservePool)582_storage)dyn_storage": {
								"base": "t_struct(ReservePool)582_storage",
								"encoding": "dynamic_array",
								"label": "struct LendingPoolV2.ReservePool[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(UserAsset)569_storage)dyn_storage": {
								"base": "t_struct(UserAsset)569_storage",
								"encoding": "dynamic_array",
								"label": "struct LendingPoolV2.UserAsset[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(ReservePool)582_storage": {
								"encoding": "inplace",
								"label": "struct LendingPoolV2.ReservePool",
								"members": [
									{
										"astId": 575,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 577,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 579,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "isfrozen",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 581,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "isActive",
										"offset": 1,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(UserAsset)569_storage": {
								"encoding": "inplace",
								"label": "struct LendingPoolV2.UserAsset",
								"members": [
									{
										"astId": 554,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 556,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "token",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 558,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "lentQty",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 560,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "borrowQty",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 562,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "interestRate",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 564,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "borrowRate",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 566,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "lendStartTimeStamp",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 568,
										"contract": "Defi-project/V2/LendingPool_20230221.sol:LendingPoolV2",
										"label": "borrowStartTimeStamp",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							53
						]
					},
					"id": 54,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 53,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 53,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 53,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 54,
							"src": "888:1952:0",
							"usedErrors": []
						}
					],
					"src": "112:2729:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 56,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 131,
							"linearizedBaseContracts": [
								131
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 65,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 74,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 131,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 131,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 131,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 131,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 131,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 131,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 132,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							205
						]
					},
					"id": 206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:2",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "Counters",
							"nameLocation": "432:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 137,
									"members": [
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 137,
											"src": "786:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 135,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:2",
									"nodeType": "StructDefinition",
									"scope": 205,
									"src": "447:374:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "901:38:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 145,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "918:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 136,
													"src": "918:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 144,
												"id": 147,
												"nodeType": "Return",
												"src": "911:21:2"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "844:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 138,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 137,
														"src": "844:7:2"
													},
													"referencedDeclaration": 137,
													"src": "844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:2"
									},
									"scope": 205,
									"src": "827:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "998:70:2",
										"statements": [
											{
												"id": 161,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:2",
												"statements": [
													{
														"expression": {
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 155,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1032:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 136,
																"src": "1032:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 160,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:2"
													}
												]
											}
										]
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "964:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 150,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 137,
														"src": "964:7:2"
													},
													"referencedDeclaration": 137,
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:2"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:2"
									},
									"scope": 205,
									"src": "945:123:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1127:176:2",
										"statements": [
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "1137:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"expression": {
														"id": 171,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 136,
													"src": "1153:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 175,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1185:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:2"
											},
											{
												"id": 189,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:2",
												"statements": [
													{
														"expression": {
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 181,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 166,
																	"src": "1260:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 136,
																"src": "1260:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 184,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "1277:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 188,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:2"
													}
												]
											}
										]
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1093:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 164,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 137,
														"src": "1093:7:2"
													},
													"referencedDeclaration": 137,
													"src": "1093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:2"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:2"
									},
									"scope": 205,
									"src": "1074:229:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1358:35:2",
										"statements": [
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 197,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 136,
														"src": "1368:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:2"
											}
										]
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1324:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 137,
														"src": "1324:7:2"
													},
													"referencedDeclaration": 137,
													"src": "1324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$137_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:2"
									},
									"scope": 205,
									"src": "1309:84:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 206,
							"src": "424:971:2",
							"usedErrors": []
						}
					],
					"src": "87:1309:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							517
						]
					},
					"id": 518,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 207,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 208,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 517,
							"linearizedBaseContracts": [
								517
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 238,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															221
														],
														"declarations": [
															{
																"constant": false,
																"id": 221,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 238,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 220,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 225,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 223,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 226,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 227,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 233,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 231,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 219,
															"id": 232,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 235,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 219,
														"id": 237,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 517,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 266,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 252,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 253,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 259,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 251,
															"id": 258,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 261,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 262,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 264,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 251,
														"id": 265,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 517,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 287,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 285,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 279,
															"id": 286,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															289
														],
														"declarations": [
															{
																"constant": false,
																"id": 289,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 308,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 288,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 293,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 291,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 294,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 295,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 297,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 303,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 301,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 279,
															"id": 302,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 305,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 306,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 279,
														"id": 307,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 517,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 322,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 329,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 321,
															"id": 328,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 332,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 334,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 321,
														"id": 335,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 517,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 364,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 357,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 349,
															"id": 356,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 359,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 360,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 362,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 349,
														"id": 363,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 517,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 376,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 377,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 375,
												"id": 379,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 517,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 392,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 394,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 517,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 406,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 407,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 409,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 517,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 421,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 422,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 517,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 436,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 437,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 439,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 517,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "5084:106:3",
										"statements": [
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 454,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "5126:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 455,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "5131:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 457,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "5134:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 453,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 459,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "5168:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 461,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "5172:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 452,
														"id": 463,
														"nodeType": "Return",
														"src": "5161:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "4981:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5000:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5019:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:3"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:3"
									},
									"scope": 517,
									"src": "4959:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "5799:105:3",
										"statements": [
											{
												"id": 489,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 479,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "5841:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 482,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "5848:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 478,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 484,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "5882:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 486,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "5886:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 477,
														"id": 488,
														"nodeType": "Return",
														"src": "5875:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5696:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5715:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5734:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:3"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5790:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:3"
									},
									"scope": 517,
									"src": "5674:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "6675:105:3",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 504,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "6717:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 507,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "6724:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 503,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 509,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 510,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "6758:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 511,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "6762:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 502,
														"id": 513,
														"nodeType": "Return",
														"src": "6751:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "6572:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "6591:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "6610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "6666:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:3"
									},
									"scope": 517,
									"src": "6550:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 518,
							"src": "482:6300:3",
							"usedErrors": []
						}
					],
					"src": "107:6676:3"
				},
				"id": 3
			},
			"Defi-project/V2/LendingPool_20230221.sol": {
				"ast": {
					"absolutePath": "Defi-project/V2/LendingPool_20230221.sol",
					"exportedSymbols": {
						"Counters": [
							205
						],
						"IERC20": [
							131
						],
						"LendingPoolV2": [
							706
						],
						"ReentrancyGuard": [
							53
						],
						"SafeMath": [
							517
						]
					},
					"id": 707,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 707,
							"sourceUnit": 206,
							"src": "117:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 707,
							"sourceUnit": 518,
							"src": "171:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 707,
							"sourceUnit": 54,
							"src": "230:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 707,
							"sourceUnit": 132,
							"src": "294:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 524,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 53,
										"src": "480:15:4"
									},
									"id": 525,
									"nodeType": "InheritanceSpecifier",
									"src": "480:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 706,
							"linearizedBaseContracts": [
								706,
								53
							],
							"name": "LendingPoolV2",
							"nameLocation": "463:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 528,
									"libraryName": {
										"id": 526,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 517,
										"src": "509:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "503:24:4",
									"typeName": {
										"id": 527,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "522:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 530,
									"mutability": "mutable",
									"name": "deployer",
									"nameLocation": "579:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "571:16:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 529,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 533,
									"mutability": "immutable",
									"name": "INTEREST_RATE",
									"nameLocation": "612:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "594:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 531,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "594:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "628:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "immutable",
									"name": "BORROW_RATE",
									"nameLocation": "654:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "636:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 534,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "668:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 539,
									"mutability": "mutable",
									"name": "borrowThreshold",
									"nameLocation": "684:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "676:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 537,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3830",
										"id": 538,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "702:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80_by_1",
											"typeString": "int_const 80"
										},
										"value": "80"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d66bd524",
									"id": 543,
									"mutability": "mutable",
									"name": "reserves",
									"nameLocation": "817:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "784:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 542,
										"keyType": {
											"id": 540,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "793:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "784:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 541,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "804:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "reverseAssets",
									"nameLocation": "883:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "873:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 544,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "873:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 545,
										"nodeType": "ArrayTypeName",
										"src": "873:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 552,
									"mutability": "mutable",
									"name": "lenderAssets",
									"nameLocation": "1053:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "1008:57:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 551,
										"keyType": {
											"id": 547,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1016:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1008:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 550,
											"keyType": {
												"id": 548,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1035:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1027:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 549,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1046:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LendingPoolV2.UserAsset",
									"id": 569,
									"members": [
										{
											"constant": false,
											"id": 554,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1148:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1140:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 553,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1140:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 556,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1171:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1163:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 555,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 558,
											"mutability": "mutable",
											"name": "lentQty",
											"nameLocation": "1195:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1187:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 557,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 560,
											"mutability": "mutable",
											"name": "borrowQty",
											"nameLocation": "1221:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1213:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 559,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1213:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 562,
											"mutability": "mutable",
											"name": "interestRate",
											"nameLocation": "1249:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1241:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 561,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1241:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 564,
											"mutability": "mutable",
											"name": "borrowRate",
											"nameLocation": "1280:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1272:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 563,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1272:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 566,
											"mutability": "mutable",
											"name": "lendStartTimeStamp",
											"nameLocation": "1309:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1301:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 565,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1301:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 568,
											"mutability": "mutable",
											"name": "borrowStartTimeStamp",
											"nameLocation": "1346:20:4",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1338:28:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 567,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1338:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserAsset",
									"nameLocation": "1119:9:4",
									"nodeType": "StructDefinition",
									"scope": 706,
									"src": "1112:262:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4093551d",
									"id": 573,
									"mutability": "mutable",
									"name": "userAssets",
									"nameLocation": "1401:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "1382:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_UserAsset_$569_storage_$dyn_storage",
										"typeString": "struct LendingPoolV2.UserAsset[]"
									},
									"typeName": {
										"baseType": {
											"id": 571,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 570,
												"name": "UserAsset",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "1382:9:4"
											},
											"referencedDeclaration": 569,
											"src": "1382:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserAsset_$569_storage_ptr",
												"typeString": "struct LendingPoolV2.UserAsset"
											}
										},
										"id": 572,
										"nodeType": "ArrayTypeName",
										"src": "1382:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_UserAsset_$569_storage_$dyn_storage_ptr",
											"typeString": "struct LendingPoolV2.UserAsset[]"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LendingPoolV2.ReservePool",
									"id": 582,
									"members": [
										{
											"constant": false,
											"id": 575,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1487:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 582,
											"src": "1479:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 574,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1479:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 577,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1508:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 582,
											"src": "1503:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 576,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1503:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 579,
											"mutability": "mutable",
											"name": "isfrozen",
											"nameLocation": "1530:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 582,
											"src": "1525:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 578,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1525:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 581,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "1554:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 582,
											"src": "1549:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 580,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1549:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReservePool",
									"nameLocation": "1456:11:4",
									"nodeType": "StructDefinition",
									"scope": 706,
									"src": "1449:121:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 586,
									"mutability": "mutable",
									"name": "reservePool",
									"nameLocation": "1590:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "1576:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_ReservePool_$582_storage_$dyn_storage",
										"typeString": "struct LendingPoolV2.ReservePool[]"
									},
									"typeName": {
										"baseType": {
											"id": 584,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 583,
												"name": "ReservePool",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 582,
												"src": "1576:11:4"
											},
											"referencedDeclaration": 582,
											"src": "1576:11:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReservePool_$582_storage_ptr",
												"typeString": "struct LendingPoolV2.ReservePool"
											}
										},
										"id": 585,
										"nodeType": "ArrayTypeName",
										"src": "1576:13:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_ReservePool_$582_storage_$dyn_storage_ptr",
											"typeString": "struct LendingPoolV2.ReservePool[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "1688:223:4",
										"statements": [
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "1699:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 590,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1710:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1710:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1699:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "1699:21:4"
											}
										]
									},
									"id": 595,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1685:2:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1688:0:4"
									},
									"scope": 706,
									"src": "1674:237:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "2000:275:4",
										"statements": [
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "userAssetLength",
														"nameLocation": "2019:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "2011:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2011:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"expression": {
														"id": 606,
														"name": "userAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2037:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserAsset_$569_storage_$dyn_storage",
															"typeString": "struct LendingPoolV2.UserAsset storage ref[] storage ref"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2037:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2011:43:4"
											},
											{
												"body": {
													"id": 636,
													"nodeType": "Block",
													"src": "2108:137:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 619,
																				"name": "userAssets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "2127:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UserAsset_$569_storage_$dyn_storage",
																					"typeString": "struct LendingPoolV2.UserAsset storage ref[] storage ref"
																				}
																			},
																			"id": 621,
																			"indexExpression": {
																				"id": 620,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 610,
																				"src": "2138:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2127:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserAsset_$569_storage",
																				"typeString": "struct LendingPoolV2.UserAsset storage ref"
																			}
																		},
																		"id": 622,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "user",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 554,
																		"src": "2127:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 623,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "2149:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2127:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 625,
																				"name": "userAssets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "2158:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UserAsset_$569_storage_$dyn_storage",
																					"typeString": "struct LendingPoolV2.UserAsset storage ref[] storage ref"
																				}
																			},
																			"id": 627,
																			"indexExpression": {
																				"id": 626,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 610,
																				"src": "2169:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2158:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserAsset_$569_storage",
																				"typeString": "struct LendingPoolV2.UserAsset storage ref"
																			}
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 556,
																		"src": "2158:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 629,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "2181:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2158:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2127:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 635,
															"nodeType": "IfStatement",
															"src": "2123:111:4",
															"trueBody": {
																"id": 634,
																"nodeType": "Block",
																"src": "2188:46:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2214:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 603,
																		"id": 633,
																		"nodeType": "Return",
																		"src": "2207:11:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 613,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "2082:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 614,
														"name": "userAssetLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "2086:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2082:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 637,
												"initializationExpression": {
													"assignments": [
														610
													],
													"declarations": [
														{
															"constant": false,
															"id": 610,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2075:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 637,
															"src": "2070:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 609,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2070:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 612,
													"initialValue": {
														"hexValue": "30",
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2079:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2070:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2103:3:4",
														"subExpression": {
															"id": 616,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "2103:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 618,
													"nodeType": "ExpressionStatement",
													"src": "2103:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2065:180:4"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2262:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 603,
												"id": 639,
												"nodeType": "Return",
												"src": "2255:12:4"
											}
										]
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenOwner",
									"nameLocation": "1928:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1949:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1941:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1964:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1956:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1940:31:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1994:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1994:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:6:4"
									},
									"scope": 706,
									"src": "1919:356:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "2409:1261:4",
										"statements": [
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "lender",
														"nameLocation": "2514:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "2506:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 648,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 652,
												"initialValue": {
													"expression": {
														"id": 650,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2523:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2523:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:27:4"
											},
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2764:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "2759:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2759:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 655,
																"name": "lenderAssets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "2773:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 657,
															"indexExpression": {
																"id": 656,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "2786:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2773:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 659,
														"indexExpression": {
															"id": 658,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "2794:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2773:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 660,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2804:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2773:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2759:52:4"
											},
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "userAsset",
														"nameLocation": "2839:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "2822:26:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserAsset_$569_memory_ptr",
															"typeString": "struct LendingPoolV2.UserAsset"
														},
														"typeName": {
															"id": 664,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 663,
																"name": "UserAsset",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 569,
																"src": "2822:9:4"
															},
															"referencedDeclaration": 569,
															"src": "2822:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserAsset_$569_storage_ptr",
																"typeString": "struct LendingPoolV2.UserAsset"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 667,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "2882:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "2910:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "2940:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 671,
															"name": "INTEREST_RATE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3002:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3042:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 673,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3078:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3078:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3129:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 666,
														"name": "UserAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "2851:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_UserAsset_$569_storage_ptr_$",
															"typeString": "type(struct LendingPoolV2.UserAsset storage pointer)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"user",
														"token",
														"lentQty",
														"borrowQty",
														"interestRate",
														"borrowRate",
														"lendStartTimeStamp",
														"borrowStartTimeStamp"
													],
													"nodeType": "FunctionCall",
													"src": "2851:291:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserAsset_$569_memory_ptr",
														"typeString": "struct LendingPoolV2.UserAsset memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2822:320:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "userAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "3179:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserAsset_$569_memory_ptr",
																"typeString": "struct LendingPoolV2.UserAsset memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UserAsset_$569_memory_ptr",
																"typeString": "struct LendingPoolV2.UserAsset memory"
															}
														],
														"expression": {
															"id": 678,
															"name": "userAssets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "3163:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserAsset_$569_storage_$dyn_storage",
																"typeString": "struct LendingPoolV2.UserAsset storage ref[] storage ref"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3163:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_UserAsset_$569_storage_$dyn_storage_ptr_$_t_struct$_UserAsset_$569_storage_$returns$__$bound_to$_t_array$_t_struct$_UserAsset_$569_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LendingPoolV2.UserAsset storage ref[] storage pointer,struct LendingPoolV2.UserAsset storage ref)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3163:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3163:26:4"
											},
											{
												"expression": {
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 684,
																"name": "lenderAssets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "3267:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 687,
															"indexExpression": {
																"id": 685,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "3280:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3267:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 688,
														"indexExpression": {
															"id": 686,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3288:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3267:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 689,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3298:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3267:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "3267:37:4"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 692,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "3503:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 694,
														"indexExpression": {
															"id": 693,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3512:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3503:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 695,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3523:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3503:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "3503:27:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 701,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3655:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 698,
															"name": "reverseAssets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3636:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3636:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3636:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "3636:26:4"
											}
										]
									},
									"functionSelector": "a2fb342d",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lend",
									"nameLocation": "2356:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2369:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2361:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2385:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2377:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2377:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:33:4"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2409:0:4"
									},
									"scope": 706,
									"src": "2347:1323:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 707,
							"src": "454:3223:4",
							"usedErrors": []
						}
					],
					"src": "33:4536:4"
				},
				"id": 4
			}
		}
	}
}