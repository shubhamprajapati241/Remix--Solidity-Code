{
	"id": "5d5665da1281af4ba0433c88bd1c14d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Defi-project/assetsTransfer/tokenTransfer3.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n\r\ncontract TokenTransfer {\r\n    address public tokenAddress;\r\n\r\n    IERC20 token;\r\n\r\n    constructor(address _token) {\r\n        tokenAddress = _token;\r\n        token = IERC20(_token);\r\n    }\r\n\r\n    function checkAllowance() public view returns(uint amount) {\r\n        return token.allowance(msg.sender, address(this));\r\n    }\r\n\r\n    function approveAmount(uint _amount) public {\r\n        token.approve(address(this), _amount);\r\n    } \r\n\r\n    function transferToken(uint _amount) public  {\r\n        token.transferFrom(msg.sender, address(this), _amount);\r\n    }\r\n\r\n    function getSCBalance() public view returns(uint amount) {\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    function getUserBalance() public view returns(uint amount) {\r\n        return token.balanceOf(msg.sender);\r\n    }\r\n\r\n}\r\n\r\n\r\n//  DAI - 0xBa8DCeD3512925e52FE67b1b5329187589072A55\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Defi-project/assetsTransfer/tokenTransfer3.sol": {
				"TokenTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approveAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSCBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUserBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":120:924  contract TokenTransfer {... */\n  mstore(0x40, 0x80)\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":207:308  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":261:267  _token */\n  dup1\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":246:258  tokenAddress */\n  0x00\n  dup1\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":246:267  tokenAddress = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":293:299  _token */\n  dup1\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":278:283  token */\n  0x01\n  0x00\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":278:300  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":207:308  constructor(address _token) {... */\n  pop\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":120:924  contract TokenTransfer {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":120:924  contract TokenTransfer {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":120:924  contract TokenTransfer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x78e48d9c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9405de64\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9fc71b31\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb7013dc1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbe75ac83\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":451:551  function approveAmount(uint _amount) public {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":316:443  function checkAllowance() public view returns(uint amount) {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":150:177  address public tokenAddress */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":560:678  function transferToken(uint _amount) public  {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":807:919  function getUserBalance() public view returns(uint amount) {... */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":686:799  function getSCBalance() public view returns(uint amount) {... */\n    tag_8:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":451:551  function approveAmount(uint _amount) public {... */\n    tag_12:\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":506:511  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":506:519  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":528:532  this */\n      address\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":535:542  _amount */\n      dup4\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":506:543  token.approve(address(this), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      pop\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":451:551  function approveAmount(uint _amount) public {... */\n      pop\n      jump\t// out\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":316:443  function checkAllowance() public view returns(uint amount) {... */\n    tag_14:\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":362:373  uint amount */\n      0x00\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":393:398  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":393:408  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":409:419  msg.sender */\n      caller\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":429:433  this */\n      address\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":393:435  token.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":386:435  return token.allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":316:443  function checkAllowance() public view returns(uint amount) {... */\n      swap1\n      jump\t// out\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":150:177  address public tokenAddress */\n    tag_18:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":560:678  function transferToken(uint _amount) public  {... */\n    tag_23:\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":616:621  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":616:634  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":635:645  msg.sender */\n      caller\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":655:659  this */\n      address\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":662:669  _amount */\n      dup5\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":616:670  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_49:\n      pop\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":560:678  function transferToken(uint _amount) public  {... */\n      pop\n      jump\t// out\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":807:919  function getUserBalance() public view returns(uint amount) {... */\n    tag_25:\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":853:864  uint amount */\n      0x00\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":884:889  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":884:899  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":900:910  msg.sender */\n      caller\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":884:911  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_54:\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":877:911  return token.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":807:919  function getUserBalance() public view returns(uint amount) {... */\n      swap1\n      jump\t// out\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":686:799  function getSCBalance() public view returns(uint amount) {... */\n    tag_28:\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":730:741  uint amount */\n      0x00\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":761:766  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":761:776  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":785:789  this */\n      address\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":761:791  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":754:791  return token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Defi-project/assetsTransfer/tokenTransfer3.sol\":686:799  function getSCBalance() public view returns(uint amount) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_61:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_63:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_64:\n        /* \"#utility.yul\":490:514   */\n      tag_80\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_63\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_81:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_65:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_83\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_64\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_86\n      tag_61\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":766:885   */\n    tag_85:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_87\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_65\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_66:\n        /* \"#utility.yul\":1112:1136   */\n      tag_89\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_63\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_16:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_91\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_66\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_67:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_68:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_94\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_67\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_69:\n        /* \"#utility.yul\":1698:1722   */\n      tag_96\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_68\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_20:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_98\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_69\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2295   */\n    tag_32:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x40\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_100\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup6\n        /* \"#utility.yul\":2135:2206   */\n      tag_69\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2216:2288   */\n      tag_101\n        /* \"#utility.yul\":2284:2286   */\n      0x20\n        /* \"#utility.yul\":2273:2282   */\n      dup4\n        /* \"#utility.yul\":2269:2287   */\n      add\n        /* \"#utility.yul\":2260:2266   */\n      dup5\n        /* \"#utility.yul\":2216:2288   */\n      tag_66\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1963:2295   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2391   */\n    tag_70:\n        /* \"#utility.yul\":2335:2342   */\n      0x00\n        /* \"#utility.yul\":2378:2383   */\n      dup2\n        /* \"#utility.yul\":2371:2384   */\n      iszero\n        /* \"#utility.yul\":2364:2385   */\n      iszero\n        /* \"#utility.yul\":2353:2385   */\n      swap1\n      pop\n        /* \"#utility.yul\":2301:2391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2397:2513   */\n    tag_71:\n        /* \"#utility.yul\":2467:2488   */\n      tag_104\n        /* \"#utility.yul\":2482:2487   */\n      dup2\n        /* \"#utility.yul\":2467:2488   */\n      tag_70\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2460:2465   */\n      dup2\n        /* \"#utility.yul\":2457:2489   */\n      eq\n        /* \"#utility.yul\":2447:2507   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2500:2501   */\n      dup1\n        /* \"#utility.yul\":2493:2505   */\n      revert\n        /* \"#utility.yul\":2447:2507   */\n    tag_105:\n        /* \"#utility.yul\":2397:2513   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2656   */\n    tag_72:\n        /* \"#utility.yul\":2573:2578   */\n      0x00\n        /* \"#utility.yul\":2604:2610   */\n      dup2\n        /* \"#utility.yul\":2598:2611   */\n      mload\n        /* \"#utility.yul\":2589:2611   */\n      swap1\n      pop\n        /* \"#utility.yul\":2620:2650   */\n      tag_107\n        /* \"#utility.yul\":2644:2649   */\n      dup2\n        /* \"#utility.yul\":2620:2650   */\n      tag_71\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2519:2656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2662:3007   */\n    tag_36:\n        /* \"#utility.yul\":2729:2735   */\n      0x00\n        /* \"#utility.yul\":2778:2780   */\n      0x20\n        /* \"#utility.yul\":2766:2775   */\n      dup3\n        /* \"#utility.yul\":2757:2764   */\n      dup5\n        /* \"#utility.yul\":2753:2776   */\n      sub\n        /* \"#utility.yul\":2749:2781   */\n      slt\n        /* \"#utility.yul\":2746:2865   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2784:2863   */\n      tag_110\n      tag_61\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2746:2865   */\n    tag_109:\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2929:2990   */\n      tag_111\n        /* \"#utility.yul\":2982:2989   */\n      dup5\n        /* \"#utility.yul\":2973:2979   */\n      dup3\n        /* \"#utility.yul\":2962:2971   */\n      dup6\n        /* \"#utility.yul\":2958:2980   */\n      add\n        /* \"#utility.yul\":2929:2990   */\n      tag_72\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2919:2990   */\n      swap2\n      pop\n        /* \"#utility.yul\":2875:3000   */\n      pop\n        /* \"#utility.yul\":2662:3007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3345   */\n    tag_39:\n        /* \"#utility.yul\":3134:3138   */\n      0x00\n        /* \"#utility.yul\":3172:3174   */\n      0x40\n        /* \"#utility.yul\":3161:3170   */\n      dup3\n        /* \"#utility.yul\":3157:3175   */\n      add\n        /* \"#utility.yul\":3149:3175   */\n      swap1\n      pop\n        /* \"#utility.yul\":3185:3256   */\n      tag_113\n        /* \"#utility.yul\":3253:3254   */\n      0x00\n        /* \"#utility.yul\":3242:3251   */\n      dup4\n        /* \"#utility.yul\":3238:3255   */\n      add\n        /* \"#utility.yul\":3229:3235   */\n      dup6\n        /* \"#utility.yul\":3185:3256   */\n      tag_69\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3266:3338   */\n      tag_114\n        /* \"#utility.yul\":3334:3336   */\n      0x20\n        /* \"#utility.yul\":3323:3332   */\n      dup4\n        /* \"#utility.yul\":3319:3337   */\n      add\n        /* \"#utility.yul\":3310:3316   */\n      dup5\n        /* \"#utility.yul\":3266:3338   */\n      tag_69\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3013:3345   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3351:3494   */\n    tag_73:\n        /* \"#utility.yul\":3408:3413   */\n      0x00\n        /* \"#utility.yul\":3439:3445   */\n      dup2\n        /* \"#utility.yul\":3433:3446   */\n      mload\n        /* \"#utility.yul\":3424:3446   */\n      swap1\n      pop\n        /* \"#utility.yul\":3455:3488   */\n      tag_116\n        /* \"#utility.yul\":3482:3487   */\n      dup2\n        /* \"#utility.yul\":3455:3488   */\n      tag_64\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3351:3494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3500:3851   */\n    tag_43:\n        /* \"#utility.yul\":3570:3576   */\n      0x00\n        /* \"#utility.yul\":3619:3621   */\n      0x20\n        /* \"#utility.yul\":3607:3616   */\n      dup3\n        /* \"#utility.yul\":3598:3605   */\n      dup5\n        /* \"#utility.yul\":3594:3617   */\n      sub\n        /* \"#utility.yul\":3590:3622   */\n      slt\n        /* \"#utility.yul\":3587:3706   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3625:3704   */\n      tag_119\n      tag_61\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3587:3706   */\n    tag_118:\n        /* \"#utility.yul\":3745:3746   */\n      0x00\n        /* \"#utility.yul\":3770:3834   */\n      tag_120\n        /* \"#utility.yul\":3826:3833   */\n      dup5\n        /* \"#utility.yul\":3817:3823   */\n      dup3\n        /* \"#utility.yul\":3806:3815   */\n      dup6\n        /* \"#utility.yul\":3802:3824   */\n      add\n        /* \"#utility.yul\":3770:3834   */\n      tag_73\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3760:3834   */\n      swap2\n      pop\n        /* \"#utility.yul\":3716:3844   */\n      pop\n        /* \"#utility.yul\":3500:3851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:4299   */\n    tag_46:\n        /* \"#utility.yul\":4006:4010   */\n      0x00\n        /* \"#utility.yul\":4044:4046   */\n      0x60\n        /* \"#utility.yul\":4033:4042   */\n      dup3\n        /* \"#utility.yul\":4029:4047   */\n      add\n        /* \"#utility.yul\":4021:4047   */\n      swap1\n      pop\n        /* \"#utility.yul\":4057:4128   */\n      tag_122\n        /* \"#utility.yul\":4125:4126   */\n      0x00\n        /* \"#utility.yul\":4114:4123   */\n      dup4\n        /* \"#utility.yul\":4110:4127   */\n      add\n        /* \"#utility.yul\":4101:4107   */\n      dup7\n        /* \"#utility.yul\":4057:4128   */\n      tag_69\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4138:4210   */\n      tag_123\n        /* \"#utility.yul\":4206:4208   */\n      0x20\n        /* \"#utility.yul\":4195:4204   */\n      dup4\n        /* \"#utility.yul\":4191:4209   */\n      add\n        /* \"#utility.yul\":4182:4188   */\n      dup6\n        /* \"#utility.yul\":4138:4210   */\n      tag_69\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4220:4292   */\n      tag_124\n        /* \"#utility.yul\":4288:4290   */\n      0x40\n        /* \"#utility.yul\":4277:4286   */\n      dup4\n        /* \"#utility.yul\":4273:4291   */\n      add\n        /* \"#utility.yul\":4264:4270   */\n      dup5\n        /* \"#utility.yul\":4220:4292   */\n      tag_66\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3857:4299   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201ef9ee0bfd14fe8199d3e9f817c82969ab8574a91e403e3afb5ee5b5c390e9f764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_101": {
									"entryPoint": null,
									"id": 101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161081c38038061081c8339818101604052810190610032919061011c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b6106c4806101586000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806378e48d9c146100675780639405de64146100835780639d76ea58146100a15780639fc71b31146100bf578063b7013dc1146100db578063be75ac83146100f9575b600080fd5b610081600480360381019061007c91906104ab565b610117565b005b61008b6101bb565b60405161009891906104e7565b60405180910390f35b6100a9610260565b6040516100b69190610543565b60405180910390f35b6100d960048036038101906100d491906104ab565b610284565b005b6100e361032a565b6040516100f091906104e7565b60405180910390f35b6101016103cd565b60405161010e91906104e7565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161017492919061055e565b6020604051808303816000875af1158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b791906105bf565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161021a9291906105ec565b602060405180830381865afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b919061062a565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102e393929190610657565b6020604051808303816000875af1158015610302573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032691906105bf565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103879190610543565b602060405180830381865afa1580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c8919061062a565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161042a9190610543565b602060405180830381865afa158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b919061062a565b905090565b600080fd5b6000819050919050565b61048881610475565b811461049357600080fd5b50565b6000813590506104a58161047f565b92915050565b6000602082840312156104c1576104c0610470565b5b60006104cf84828501610496565b91505092915050565b6104e181610475565b82525050565b60006020820190506104fc60008301846104d8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061052d82610502565b9050919050565b61053d81610522565b82525050565b60006020820190506105586000830184610534565b92915050565b60006040820190506105736000830185610534565b61058060208301846104d8565b9392505050565b60008115159050919050565b61059c81610587565b81146105a757600080fd5b50565b6000815190506105b981610593565b92915050565b6000602082840312156105d5576105d4610470565b5b60006105e3848285016105aa565b91505092915050565b60006040820190506106016000830185610534565b61060e6020830184610534565b9392505050565b6000815190506106248161047f565b92915050565b6000602082840312156106405761063f610470565b5b600061064e84828501610615565b91505092915050565b600060608201905061066c6000830186610534565b6106796020830185610534565b61068660408301846104d8565b94935050505056fea26469706673582212201ef9ee0bfd14fe8199d3e9f817c82969ab8574a91e403e3afb5ee5b5c390e9f764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x81C CODESIZE SUB DUP1 PUSH2 0x81C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x11C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9 DUP3 PUSH2 0xBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x131 PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP5 DUP3 DUP6 ADD PUSH2 0x107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C4 DUP1 PUSH2 0x158 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E48D9C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x9405DE64 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x9FC71B31 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xB7013DC1 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xBE75AC83 EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x284 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174 SWAP3 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A SWAP3 SWAP2 SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x237 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x488 DUP2 PUSH2 0x475 JUMP JUMPDEST DUP2 EQ PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A5 DUP2 PUSH2 0x47F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C0 PUSH2 0x470 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CF DUP5 DUP3 DUP6 ADD PUSH2 0x496 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E1 DUP2 PUSH2 0x475 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53D DUP2 PUSH2 0x522 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x558 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x534 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x573 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x580 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59C DUP2 PUSH2 0x587 JUMP JUMPDEST DUP2 EQ PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B9 DUP2 PUSH2 0x593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH2 0x5D4 PUSH2 0x470 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E3 DUP5 DUP3 DUP6 ADD PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x601 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x60E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x534 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x624 DUP2 PUSH2 0x47F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x640 JUMPI PUSH2 0x63F PUSH2 0x470 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x64E DUP5 DUP3 DUP6 ADD PUSH2 0x615 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x66C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x679 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x686 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xF9 0xEE SIGNEXTEND REVERT EQ INVALID DUP2 SWAP10 0xD3 0xE9 0xF8 OR 0xC8 0x29 PUSH10 0xAB8574A91E403E3AFB5E 0xE5 0xB5 0xC3 SWAP1 0xE9 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "120:804:1:-:0;;;207:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;261:6;246:12;;:21;;;;;;;;;;;;;;;;;;293:6;278:5;;:22;;;;;;;;;;;;;;;;;;207:101;120:804;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;120:804:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@approveAmount_133": {
									"entryPoint": 279,
									"id": 133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkAllowance_117": {
									"entryPoint": 443,
									"id": 117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSCBalance_165": {
									"entryPoint": 973,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserBalance_177": {
									"entryPoint": 810,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenAddress_82": {
									"entryPoint": 608,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferToken_151": {
									"entryPoint": 644,
									"id": 151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4302:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:2",
														"type": ""
													}
												],
												"src": "1025:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:2",
														"type": ""
													}
												],
												"src": "1149:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:2",
														"type": ""
													}
												],
												"src": "1377:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:2",
														"type": ""
													}
												],
												"src": "1509:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:2",
														"type": ""
													}
												],
												"src": "1611:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:2",
														"type": ""
													}
												],
												"src": "1735:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2273:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2284:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2216:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2216:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2053:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2065:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:2",
														"type": ""
													}
												],
												"src": "1963:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2343:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2353:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2378:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2371:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2364:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2353:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2325:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2335:7:2",
														"type": ""
													}
												],
												"src": "2301:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2491:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2493:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2460:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2482:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2467:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2467:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2457:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:40:2"
															},
															"nodeType": "YulIf",
															"src": "2447:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2430:5:2",
														"type": ""
													}
												],
												"src": "2397:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2589:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2604:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2598:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2589:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2644:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2620:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2557:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2565:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2573:5:2",
														"type": ""
													}
												],
												"src": "2519:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2782:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2784:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2784:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2784:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2757:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2766:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2753:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:32:2"
															},
															"nodeType": "YulIf",
															"src": "2746:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2875:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2890:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2904:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2894:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2919:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2962:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2973:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2958:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2958:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2982:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2929:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2929:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2919:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2706:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2717:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2729:6:2",
														"type": ""
													}
												],
												"src": "2662:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3139:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3149:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3161:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3157:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3157:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3149:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3229:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3253:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3238:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3238:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3185:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3185:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3310:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3323:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3334:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3266:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3103:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3115:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3123:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3134:4:2",
														"type": ""
													}
												],
												"src": "3013:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3414:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3424:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3439:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3433:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3424:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3482:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3455:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3455:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3392:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3400:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3408:5:2",
														"type": ""
													}
												],
												"src": "3351:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3577:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3623:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3625:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3625:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3625:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3607:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3594:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3619:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3590:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:32:2"
															},
															"nodeType": "YulIf",
															"src": "3587:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3716:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3731:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3745:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3735:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3760:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3806:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3817:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3802:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3802:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3826:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3770:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3760:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3547:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3558:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3570:6:2",
														"type": ""
													}
												],
												"src": "3500:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4011:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4021:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4033:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4029:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4029:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4021:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4101:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4057:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4182:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4195:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4206:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4191:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4191:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4138:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4138:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4264:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4277:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4288:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4273:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4273:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4220:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3967:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3979:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3987:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3995:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4006:4:2",
														"type": ""
													}
												],
												"src": "3857:442:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806378e48d9c146100675780639405de64146100835780639d76ea58146100a15780639fc71b31146100bf578063b7013dc1146100db578063be75ac83146100f9575b600080fd5b610081600480360381019061007c91906104ab565b610117565b005b61008b6101bb565b60405161009891906104e7565b60405180910390f35b6100a9610260565b6040516100b69190610543565b60405180910390f35b6100d960048036038101906100d491906104ab565b610284565b005b6100e361032a565b6040516100f091906104e7565b60405180910390f35b6101016103cd565b60405161010e91906104e7565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161017492919061055e565b6020604051808303816000875af1158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b791906105bf565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161021a9291906105ec565b602060405180830381865afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b919061062a565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102e393929190610657565b6020604051808303816000875af1158015610302573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032691906105bf565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103879190610543565b602060405180830381865afa1580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c8919061062a565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161042a9190610543565b602060405180830381865afa158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b919061062a565b905090565b600080fd5b6000819050919050565b61048881610475565b811461049357600080fd5b50565b6000813590506104a58161047f565b92915050565b6000602082840312156104c1576104c0610470565b5b60006104cf84828501610496565b91505092915050565b6104e181610475565b82525050565b60006020820190506104fc60008301846104d8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061052d82610502565b9050919050565b61053d81610522565b82525050565b60006020820190506105586000830184610534565b92915050565b60006040820190506105736000830185610534565b61058060208301846104d8565b9392505050565b60008115159050919050565b61059c81610587565b81146105a757600080fd5b50565b6000815190506105b981610593565b92915050565b6000602082840312156105d5576105d4610470565b5b60006105e3848285016105aa565b91505092915050565b60006040820190506106016000830185610534565b61060e6020830184610534565b9392505050565b6000815190506106248161047f565b92915050565b6000602082840312156106405761063f610470565b5b600061064e84828501610615565b91505092915050565b600060608201905061066c6000830186610534565b6106796020830185610534565b61068660408301846104d8565b94935050505056fea26469706673582212201ef9ee0bfd14fe8199d3e9f817c82969ab8574a91e403e3afb5ee5b5c390e9f764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E48D9C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x9405DE64 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x9FC71B31 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xB7013DC1 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xBE75AC83 EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x284 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174 SWAP3 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A SWAP3 SWAP2 SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x237 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x488 DUP2 PUSH2 0x475 JUMP JUMPDEST DUP2 EQ PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A5 DUP2 PUSH2 0x47F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C0 PUSH2 0x470 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CF DUP5 DUP3 DUP6 ADD PUSH2 0x496 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E1 DUP2 PUSH2 0x475 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53D DUP2 PUSH2 0x522 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x558 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x534 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x573 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x580 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59C DUP2 PUSH2 0x587 JUMP JUMPDEST DUP2 EQ PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B9 DUP2 PUSH2 0x593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH2 0x5D4 PUSH2 0x470 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E3 DUP5 DUP3 DUP6 ADD PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x601 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x60E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x534 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x624 DUP2 PUSH2 0x47F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x640 JUMPI PUSH2 0x63F PUSH2 0x470 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x64E DUP5 DUP3 DUP6 ADD PUSH2 0x615 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x66C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x679 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x686 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xF9 0xEE SIGNEXTEND REVERT EQ INVALID DUP2 SWAP10 0xD3 0xE9 0xF8 OR 0xC8 0x29 PUSH10 0xAB8574A91E403E3AFB5E 0xE5 0xB5 0xC3 SWAP1 0xE9 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "120:804:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;451:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;316:127;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;150:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;560:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;807:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;686:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;451:100;506:5;;;;;;;;;;;:13;;;528:4;535:7;506:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;451:100;:::o;316:127::-;362:11;393:5;;;;;;;;;;;:15;;;409:10;429:4;393:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;386:49;;316:127;:::o;150:27::-;;;;;;;;;;;;:::o;560:118::-;616:5;;;;;;;;;;;:18;;;635:10;655:4;662:7;616:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;560:118;:::o;807:112::-;853:11;884:5;;;;;;;;;;;:15;;;900:10;884:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;877:34;;807:112;:::o;686:113::-;730:11;761:5;;;;;;;;;;;:15;;;785:4;761:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;754:37;;686:113;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:332::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;2216:72;2284:2;2273:9;2269:18;2260:6;2216:72;:::i;:::-;1963:332;;;;;:::o;2301:90::-;2335:7;2378:5;2371:13;2364:21;2353:32;;2301:90;;;:::o;2397:116::-;2467:21;2482:5;2467:21;:::i;:::-;2460:5;2457:32;2447:60;;2503:1;2500;2493:12;2447:60;2397:116;:::o;2519:137::-;2573:5;2604:6;2598:13;2589:22;;2620:30;2644:5;2620:30;:::i;:::-;2519:137;;;;:::o;2662:345::-;2729:6;2778:2;2766:9;2757:7;2753:23;2749:32;2746:119;;;2784:79;;:::i;:::-;2746:119;2904:1;2929:61;2982:7;2973:6;2962:9;2958:22;2929:61;:::i;:::-;2919:71;;2875:125;2662:345;;;;:::o;3013:332::-;3134:4;3172:2;3161:9;3157:18;3149:26;;3185:71;3253:1;3242:9;3238:17;3229:6;3185:71;:::i;:::-;3266:72;3334:2;3323:9;3319:18;3310:6;3266:72;:::i;:::-;3013:332;;;;;:::o;3351:143::-;3408:5;3439:6;3433:13;3424:22;;3455:33;3482:5;3455:33;:::i;:::-;3351:143;;;;:::o;3500:351::-;3570:6;3619:2;3607:9;3598:7;3594:23;3590:32;3587:119;;;3625:79;;:::i;:::-;3587:119;3745:1;3770:64;3826:7;3817:6;3806:9;3802:22;3770:64;:::i;:::-;3760:74;;3716:128;3500:351;;;;:::o;3857:442::-;4006:4;4044:2;4033:9;4029:18;4021:26;;4057:71;4125:1;4114:9;4110:17;4101:6;4057:71;:::i;:::-;4138:72;4206:2;4195:9;4191:18;4182:6;4138:72;:::i;:::-;4220;4288:2;4277:9;4273:18;4264:6;4220:72;:::i;:::-;3857:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "346400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approveAmount(uint256)": "infinite",
								"checkAllowance()": "infinite",
								"getSCBalance()": "infinite",
								"getUserBalance()": "infinite",
								"tokenAddress()": "2533",
								"transferToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 924,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 924,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 924,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 308,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 308,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 308,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 207,
									"end": 308,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 207,
									"end": 308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 207,
									"end": 308,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 207,
									"end": 308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 207,
									"end": 308,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 261,
									"end": 267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 258,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 258,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 246,
									"end": 267,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 246,
									"end": 267,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 246,
									"end": 267,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 246,
									"end": 267,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 293,
									"end": 299,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 278,
									"end": 283,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 300,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 278,
									"end": 300,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 278,
									"end": 300,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 278,
									"end": 300,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 278,
									"end": 300,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 207,
									"end": 308,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 120,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 120,
									"end": 924,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 120,
									"end": 924,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 120,
									"end": 924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 120,
									"end": 924,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 924,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 120,
									"end": 924,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 924,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 924,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 120,
									"end": 924,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 924,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ef9ee0bfd14fe8199d3e9f817c82969ab8574a91e403e3afb5ee5b5c390e9f764736f6c63430008120033",
									".code": [
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "78E48D9C"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "9405DE64"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "9D76EA58"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "9FC71B31"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "B7013DC1"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "BE75AC83"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 451,
											"end": 551,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 451,
											"end": 551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 451,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 451,
											"end": 551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 451,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 451,
											"end": 551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 316,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 316,
											"end": 443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 316,
											"end": 443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 316,
											"end": 443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 316,
											"end": 443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 316,
											"end": 443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 150,
											"end": 177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 560,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 560,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 560,
											"end": 678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 560,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 560,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 560,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 560,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 807,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 807,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 807,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 807,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 807,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 686,
											"end": 799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 686,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 686,
											"end": 799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 686,
											"end": 799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 686,
											"end": 799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 686,
											"end": 799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 686,
											"end": 799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 451,
											"end": 551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 506,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 506,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 511,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 506,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 506,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 506,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 528,
											"end": 532,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 535,
											"end": 542,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 506,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 506,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 506,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 316,
											"end": 443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 362,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 393,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 393,
											"end": 408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 393,
											"end": 408,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 409,
											"end": 419,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 429,
											"end": 433,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 393,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 393,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 435,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 393,
											"end": 435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 150,
											"end": 177,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 150,
											"end": 177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 560,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 616,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 621,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 616,
											"end": 621,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 621,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 616,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 635,
											"end": 645,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 655,
											"end": 659,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 662,
											"end": 669,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 616,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 616,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 616,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 807,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 884,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 889,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 884,
											"end": 889,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 889,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 884,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 884,
											"end": 889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 884,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 884,
											"end": 899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 884,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 900,
											"end": 910,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 884,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 884,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 884,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 877,
											"end": 911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 686,
											"end": 799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 761,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 766,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 761,
											"end": 766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 761,
											"end": 766,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 766,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 761,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 761,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 761,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 785,
											"end": 789,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 761,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 754,
											"end": 791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 754,
											"end": 791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2135,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2266,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2216,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2385,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2513,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2397,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2482,
											"end": 2487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2467,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2447,
											"end": 2507,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2507,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2447,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2644,
											"end": 2649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2620,
											"end": 2650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2650,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2620,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2764,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2776,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2749,
											"end": 2781,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2784,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2982,
											"end": 2989,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2929,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 3000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3345,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3013,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3138,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3174,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3170,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3251,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3255,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3235,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3185,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3185,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3334,
											"end": 3336,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3316,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3266,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3266,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3345,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3345,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3494,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3351,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3446,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3424,
											"end": 3446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3424,
											"end": 3446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3482,
											"end": 3487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3455,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3851,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3500,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3616,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3622,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3587,
											"end": 3706,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3587,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3587,
											"end": 3706,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3625,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3625,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3625,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3625,
											"end": 3704,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3625,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3587,
											"end": 3706,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3587,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3826,
											"end": 3833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3806,
											"end": 3815,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3770,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3834,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3770,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 4299,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3857,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4125,
											"end": 4126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4123,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4110,
											"end": 4127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4101,
											"end": 4107,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4057,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4128,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4057,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4206,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4204,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4138,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4210,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4138,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4220,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4286,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4220,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4220,
											"end": 4292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4220,
											"end": 4292,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4220,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 4299,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 4299,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 4299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Defi-project/assetsTransfer/tokenTransfer3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approveAmount(uint256)": "78e48d9c",
							"checkAllowance()": "9405de64",
							"getSCBalance()": "be75ac83",
							"getUserBalance()": "b7013dc1",
							"tokenAddress()": "9d76ea58",
							"transferToken(uint256)": "9fc71b31"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approveAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSCBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Defi-project/assetsTransfer/tokenTransfer3.sol\":\"TokenTransfer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Defi-project/assetsTransfer/tokenTransfer3.sol\":{\"keccak256\":\"0xd8c31614f4c57294269f0240aa7d3548d6d990bd48715e4fa6d95ddab6c81b60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://749e334a8987dd8e01bf8f32feb3d735f44394add7752e73e6d0a8345d4ae19d\",\"dweb:/ipfs/QmeXkjewpfS9bYDNhK64hiJJNQ7i8naorFfwQxgigDS22j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "Defi-project/assetsTransfer/tokenTransfer3.sol:TokenTransfer",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 85,
								"contract": "Defi-project/assetsTransfer/tokenTransfer3.sol:TokenTransfer",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"Defi-project/assetsTransfer/tokenTransfer3.sol": {
				"ast": {
					"absolutePath": "Defi-project/assetsTransfer/tokenTransfer3.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TokenTransfer": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 179,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenTransfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "TokenTransfer",
							"nameLocation": "129:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 82,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "165:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 178,
									"src": "150:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "150:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "193:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 178,
									"src": "186:12:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 84,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 83,
											"name": "IERC20",
											"nameLocations": [
												"186:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "186:6:1"
										},
										"referencedDeclaration": 77,
										"src": "186:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "235:73:1",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "246:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "261:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "246:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "246:21:1"
											},
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "278:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 96,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "293:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 95,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "286:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "286:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "278:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "278:22:1"
											}
										]
									},
									"id": 101,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "227:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "219:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:16:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:1"
									},
									"scope": 178,
									"src": "207:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "375:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 108,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "409:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "413:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "409:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 112,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "429:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenTransfer_$178",
																		"typeString": "contract TokenTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenTransfer_$178",
																		"typeString": "contract TokenTransfer"
																	}
																],
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "421:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "421:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "421:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 106,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "393:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "399:9:1",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "393:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "393:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 105,
												"id": 115,
												"nodeType": "Return",
												"src": "386:49:1"
											}
										]
									},
									"functionSelector": "9405de64",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAllowance",
									"nameLocation": "325:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:2:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "367:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "362:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "362:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:13:1"
									},
									"scope": 178,
									"src": "316:127:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "495:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 127,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "528:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenTransfer_$178",
																		"typeString": "contract TokenTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenTransfer_$178",
																		"typeString": "contract TokenTransfer"
																	}
																],
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "520:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 125,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "520:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 129,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "535:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 122,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "506:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "512:7:1",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "506:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "506:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "506:37:1"
											}
										]
									},
									"functionSelector": "78e48d9c",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAmount",
									"nameLocation": "460:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "479:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "474:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "474:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:14:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:0:1"
									},
									"scope": 178,
									"src": "451:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "605:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "635:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "639:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "635:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 145,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "655:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenTransfer_$178",
																		"typeString": "contract TokenTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenTransfer_$178",
																		"typeString": "contract TokenTransfer"
																	}
																],
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "647:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 143,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "647:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "647:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "662:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 138,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "616:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "622:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "616:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "616:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "616:54:1"
											}
										]
									},
									"functionSelector": "9fc71b31",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "569:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "588:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "583:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:14:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:1"
									},
									"scope": 178,
									"src": "560:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "743:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "785:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenTransfer_$178",
																		"typeString": "contract TokenTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenTransfer_$178",
																		"typeString": "contract TokenTransfer"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "777:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "777:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "777:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 156,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "761:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "767:9:1",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "761:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 155,
												"id": 163,
												"nodeType": "Return",
												"src": "754:37:1"
											}
										]
									},
									"functionSelector": "be75ac83",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSCBalance",
									"nameLocation": "695:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "735:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "730:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:13:1"
									},
									"scope": 178,
									"src": "686:113:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "866:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 172,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "900:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "904:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "900:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 170,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "884:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "890:9:1",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "884:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "877:34:1"
											}
										]
									},
									"functionSelector": "b7013dc1",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBalance",
									"nameLocation": "816:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:2:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "858:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "853:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "853:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:13:1"
									},
									"scope": 178,
									"src": "807:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 179,
							"src": "120:804:1",
							"usedErrors": []
						}
					],
					"src": "31:953:1"
				},
				"id": 1
			}
		}
	}
}