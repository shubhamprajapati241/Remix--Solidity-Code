{
	"id": "2df2163c1cfdc93cb8071faa171a7dc2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Defi-project/assetsTransfer/tokenTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\r\n\r\n\r\ncontract TokenTransfer {\r\n    IERC20 _token;\r\n    address public tokenAddress;\r\n\r\n\r\n    // token = MyToken's contract address\r\n    constructor(address token) {\r\n        _token = IERC20(token);\r\n        tokenAddress = token;\r\n    }\r\n\r\n    // Modifier to check token allowance\r\n    modifier checkAllowance(uint amount) {\r\n        require(_token.allowance(msg.sender, address(this)) >= amount, \"Error\");\r\n        _;\r\n    }\r\n\r\n    // // In your case, Account A must to call this function and then deposit an amount of tokens \r\n    // function depositTokens(uint _amount) public checkAllowance(_amount) {\r\n    //     _token.approve(address(this), _amount);\r\n    //     _token.transferFrom(msg.sender, address(this), _amount);\r\n    // }\r\n\r\n    \r\n    // to = Account B's address\r\n    function stake(address to, uint amount) public {\r\n        _token.transfer(to, amount);\r\n    }\r\n\r\n    // Allow you to show how many tokens owns this smart contract\r\n    function getSmartContractBalance() external view returns(uint) {\r\n        return _token.balanceOf(address(this));\r\n    }\r\n\r\n    // Allow you to show how many tokens owns this smart contract\r\n    function getSmartContractBalanceSC() external view returns(uint) {\r\n        return _token.balanceOf(msg.sender);\r\n    }\r\n}\r\n\r\n\r\n// DAI 0xBa8DCeD3512925e52FE67b1b5329187589072A55\r\n//  USDC : 0x65aFADD39029741B3b8f0756952C74678c9cEC93\r\n\r\n//  Account 2 : 0x021edEFA528293eB8ad9A2d9e0d71011f6297601"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Defi-project/assetsTransfer/tokenTransfer.sol": {
				"TokenTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getSmartContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSmartContractBalanceSC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":175:1437  contract TokenTransfer {... */\n  mstore(0x40, 0x80)\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":306:405  constructor(address token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":360:365  token */\n  dup1\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":344:350  _token */\n  0x00\n  dup1\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":344:366  _token = IERC20(token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":392:397  token */\n  dup1\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":377:389  tokenAddress */\n  0x01\n  0x00\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":377:397  tokenAddress = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":306:405  constructor(address token) {... */\n  pop\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":175:1437  contract TokenTransfer {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":175:1437  contract TokenTransfer {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":175:1437  contract TokenTransfer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x04a26112\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5145cbc0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1315:1434  function getSmartContractBalanceSC() external view returns(uint) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1120:1240  function getSmartContractBalance() external view returns(uint) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":225:252  address public tokenAddress */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":952:1045  function stake(address to, uint amount) public {... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1315:1434  function getSmartContractBalanceSC() external view returns(uint) {... */\n    tag_8:\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1374:1378  uint */\n      0x00\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1398:1404  _token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1398:1414  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1415:1425  msg.sender */\n      caller\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1398:1426  _token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_23:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1391:1426  return _token.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1315:1434  function getSmartContractBalanceSC() external view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1120:1240  function getSmartContractBalance() external view returns(uint) {... */\n    tag_12:\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1177:1181  uint */\n      0x00\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1201:1207  _token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1201:1217  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1226:1230  this */\n      address\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1201:1232  _token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_29:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_32:\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1194:1232  return _token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1120:1240  function getSmartContractBalance() external view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":225:252  address public tokenAddress */\n    tag_15:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":952:1045  function stake(address to, uint amount) public {... */\n    tag_21:\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1010:1016  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1010:1025  _token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1026:1028  to */\n      dup4\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1030:1036  amount */\n      dup4\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":1010:1037  _token.transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      pop\n        /* \"Defi-project/assetsTransfer/tokenTransfer.sol\":952:1045  function stake(address to, uint amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_40:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_41:\n        /* \"#utility.yul\":177:201   */\n      tag_59\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_40\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_10:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_61\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_41\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_42:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_43:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_64\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_42\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_44:\n        /* \"#utility.yul\":763:787   */\n      tag_66\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_43\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_17:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_68\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_44\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_46:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_48:\n        /* \"#utility.yul\":1428:1452   */\n      tag_73\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_43\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_74:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_49:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_76\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_48\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1750   */\n    tag_50:\n        /* \"#utility.yul\":1701:1725   */\n      tag_78\n        /* \"#utility.yul\":1719:1724   */\n      dup2\n        /* \"#utility.yul\":1701:1725   */\n      tag_40\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1691:1726   */\n      eq\n        /* \"#utility.yul\":1681:1744   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":1740:1741   */\n      0x00\n        /* \"#utility.yul\":1737:1738   */\n      dup1\n        /* \"#utility.yul\":1730:1742   */\n      revert\n        /* \"#utility.yul\":1681:1744   */\n    tag_79:\n        /* \"#utility.yul\":1628:1750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1895   */\n    tag_51:\n        /* \"#utility.yul\":1802:1807   */\n      0x00\n        /* \"#utility.yul\":1840:1846   */\n      dup2\n        /* \"#utility.yul\":1827:1847   */\n      calldataload\n        /* \"#utility.yul\":1818:1847   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1889   */\n      tag_81\n        /* \"#utility.yul\":1883:1888   */\n      dup2\n        /* \"#utility.yul\":1856:1889   */\n      tag_50\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1756:1895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1901:2375   */\n    tag_20:\n        /* \"#utility.yul\":1969:1975   */\n      0x00\n        /* \"#utility.yul\":1977:1983   */\n      dup1\n        /* \"#utility.yul\":2026:2028   */\n      0x40\n        /* \"#utility.yul\":2014:2023   */\n      dup4\n        /* \"#utility.yul\":2005:2012   */\n      dup6\n        /* \"#utility.yul\":2001:2024   */\n      sub\n        /* \"#utility.yul\":1997:2029   */\n      slt\n        /* \"#utility.yul\":1994:2113   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2032:2111   */\n      tag_84\n      tag_46\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1994:2113   */\n    tag_83:\n        /* \"#utility.yul\":2152:2153   */\n      0x00\n        /* \"#utility.yul\":2177:2230   */\n      tag_85\n        /* \"#utility.yul\":2222:2229   */\n      dup6\n        /* \"#utility.yul\":2213:2219   */\n      dup3\n        /* \"#utility.yul\":2202:2211   */\n      dup7\n        /* \"#utility.yul\":2198:2220   */\n      add\n        /* \"#utility.yul\":2177:2230   */\n      tag_49\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2167:2230   */\n      swap3\n      pop\n        /* \"#utility.yul\":2123:2240   */\n      pop\n        /* \"#utility.yul\":2279:2281   */\n      0x20\n        /* \"#utility.yul\":2305:2358   */\n      tag_86\n        /* \"#utility.yul\":2350:2357   */\n      dup6\n        /* \"#utility.yul\":2341:2347   */\n      dup3\n        /* \"#utility.yul\":2330:2339   */\n      dup7\n        /* \"#utility.yul\":2326:2348   */\n      add\n        /* \"#utility.yul\":2305:2358   */\n      tag_51\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2295:2358   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2368   */\n      pop\n        /* \"#utility.yul\":1901:2375   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2524   */\n    tag_52:\n        /* \"#utility.yul\":2438:2443   */\n      0x00\n        /* \"#utility.yul\":2469:2475   */\n      dup2\n        /* \"#utility.yul\":2463:2476   */\n      mload\n        /* \"#utility.yul\":2454:2476   */\n      swap1\n      pop\n        /* \"#utility.yul\":2485:2518   */\n      tag_88\n        /* \"#utility.yul\":2512:2517   */\n      dup2\n        /* \"#utility.yul\":2485:2518   */\n      tag_50\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2381:2524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2530:2881   */\n    tag_27:\n        /* \"#utility.yul\":2600:2606   */\n      0x00\n        /* \"#utility.yul\":2649:2651   */\n      0x20\n        /* \"#utility.yul\":2637:2646   */\n      dup3\n        /* \"#utility.yul\":2628:2635   */\n      dup5\n        /* \"#utility.yul\":2624:2647   */\n      sub\n        /* \"#utility.yul\":2620:2652   */\n      slt\n        /* \"#utility.yul\":2617:2736   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":2655:2734   */\n      tag_91\n      tag_46\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2617:2736   */\n    tag_90:\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2800:2864   */\n      tag_92\n        /* \"#utility.yul\":2856:2863   */\n      dup5\n        /* \"#utility.yul\":2847:2853   */\n      dup3\n        /* \"#utility.yul\":2836:2845   */\n      dup6\n        /* \"#utility.yul\":2832:2854   */\n      add\n        /* \"#utility.yul\":2800:2864   */\n      tag_52\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2790:2864   */\n      swap2\n      pop\n        /* \"#utility.yul\":2746:2874   */\n      pop\n        /* \"#utility.yul\":2530:2881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2887:3219   */\n    tag_35:\n        /* \"#utility.yul\":3008:3012   */\n      0x00\n        /* \"#utility.yul\":3046:3048   */\n      0x40\n        /* \"#utility.yul\":3035:3044   */\n      dup3\n        /* \"#utility.yul\":3031:3049   */\n      add\n        /* \"#utility.yul\":3023:3049   */\n      swap1\n      pop\n        /* \"#utility.yul\":3059:3130   */\n      tag_94\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3116:3125   */\n      dup4\n        /* \"#utility.yul\":3112:3129   */\n      add\n        /* \"#utility.yul\":3103:3109   */\n      dup6\n        /* \"#utility.yul\":3059:3130   */\n      tag_44\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3140:3212   */\n      tag_95\n        /* \"#utility.yul\":3208:3210   */\n      0x20\n        /* \"#utility.yul\":3197:3206   */\n      dup4\n        /* \"#utility.yul\":3193:3211   */\n      add\n        /* \"#utility.yul\":3184:3190   */\n      dup5\n        /* \"#utility.yul\":3140:3212   */\n      tag_41\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2887:3219   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3225:3315   */\n    tag_53:\n        /* \"#utility.yul\":3259:3266   */\n      0x00\n        /* \"#utility.yul\":3302:3307   */\n      dup2\n        /* \"#utility.yul\":3295:3308   */\n      iszero\n        /* \"#utility.yul\":3288:3309   */\n      iszero\n        /* \"#utility.yul\":3277:3309   */\n      swap1\n      pop\n        /* \"#utility.yul\":3225:3315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3321:3437   */\n    tag_54:\n        /* \"#utility.yul\":3391:3412   */\n      tag_98\n        /* \"#utility.yul\":3406:3411   */\n      dup2\n        /* \"#utility.yul\":3391:3412   */\n      tag_53\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3384:3389   */\n      dup2\n        /* \"#utility.yul\":3381:3413   */\n      eq\n        /* \"#utility.yul\":3371:3431   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":3427:3428   */\n      0x00\n        /* \"#utility.yul\":3424:3425   */\n      dup1\n        /* \"#utility.yul\":3417:3429   */\n      revert\n        /* \"#utility.yul\":3371:3431   */\n    tag_99:\n        /* \"#utility.yul\":3321:3437   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3443:3580   */\n    tag_55:\n        /* \"#utility.yul\":3497:3502   */\n      0x00\n        /* \"#utility.yul\":3528:3534   */\n      dup2\n        /* \"#utility.yul\":3522:3535   */\n      mload\n        /* \"#utility.yul\":3513:3535   */\n      swap1\n      pop\n        /* \"#utility.yul\":3544:3574   */\n      tag_101\n        /* \"#utility.yul\":3568:3573   */\n      dup2\n        /* \"#utility.yul\":3544:3574   */\n      tag_54\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3443:3580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3586:3931   */\n    tag_39:\n        /* \"#utility.yul\":3653:3659   */\n      0x00\n        /* \"#utility.yul\":3702:3704   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3681:3688   */\n      dup5\n        /* \"#utility.yul\":3677:3700   */\n      sub\n        /* \"#utility.yul\":3673:3705   */\n      slt\n        /* \"#utility.yul\":3670:3789   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":3708:3787   */\n      tag_104\n      tag_46\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3670:3789   */\n    tag_103:\n        /* \"#utility.yul\":3828:3829   */\n      0x00\n        /* \"#utility.yul\":3853:3914   */\n      tag_105\n        /* \"#utility.yul\":3906:3913   */\n      dup5\n        /* \"#utility.yul\":3897:3903   */\n      dup3\n        /* \"#utility.yul\":3886:3895   */\n      dup6\n        /* \"#utility.yul\":3882:3904   */\n      add\n        /* \"#utility.yul\":3853:3914   */\n      tag_55\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3843:3914   */\n      swap2\n      pop\n        /* \"#utility.yul\":3799:3924   */\n      pop\n        /* \"#utility.yul\":3586:3931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b69c15f1e09dcb3730d977ab97b80cc5b4bd32134beaac0211c7ed679b47451d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161065f38038061065f8339818101604052810190610032919061011c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610507806101586000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806304a26112146100515780635145cbc01461006f5780639d76ea581461008d578063adc9772e146100ab575b600080fd5b6100596100c7565b60405161006691906102ed565b60405180910390f35b610077610169565b60405161008491906102ed565b60405180910390f35b61009561020b565b6040516100a29190610349565b60405180910390f35b6100c560048036038101906100c091906103c1565b610231565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101239190610349565b602060405180830381865afa158015610140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101649190610416565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101c59190610349565b602060405180830381865afa1580156101e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102069190610416565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161028c929190610443565b6020604051808303816000875af11580156102ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cf91906104a4565b505050565b6000819050919050565b6102e7816102d4565b82525050565b600060208201905061030260008301846102de565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033382610308565b9050919050565b61034381610328565b82525050565b600060208201905061035e600083018461033a565b92915050565b600080fd5b61037281610328565b811461037d57600080fd5b50565b60008135905061038f81610369565b92915050565b61039e816102d4565b81146103a957600080fd5b50565b6000813590506103bb81610395565b92915050565b600080604083850312156103d8576103d7610364565b5b60006103e685828601610380565b92505060206103f7858286016103ac565b9150509250929050565b60008151905061041081610395565b92915050565b60006020828403121561042c5761042b610364565b5b600061043a84828501610401565b91505092915050565b6000604082019050610458600083018561033a565b61046560208301846102de565b9392505050565b60008115159050919050565b6104818161046c565b811461048c57600080fd5b50565b60008151905061049e81610478565b92915050565b6000602082840312156104ba576104b9610364565b5b60006104c88482850161048f565b9150509291505056fea2646970667358221220b69c15f1e09dcb3730d977ab97b80cc5b4bd32134beaac0211c7ed679b47451d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x65F CODESIZE SUB DUP1 PUSH2 0x65F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x11C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9 DUP3 PUSH2 0xBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x131 PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP5 DUP3 DUP6 ADD PUSH2 0x107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x507 DUP1 PUSH2 0x158 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A26112 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5145CBC0 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x416 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x416 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP3 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E7 DUP2 PUSH2 0x2D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x302 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x333 DUP3 PUSH2 0x308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x328 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x372 DUP2 PUSH2 0x328 JUMP JUMPDEST DUP2 EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38F DUP2 PUSH2 0x369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x2D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BB DUP2 PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D7 PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP6 DUP3 DUP7 ADD PUSH2 0x380 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F7 DUP6 DUP3 DUP7 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x410 DUP2 PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43A DUP5 DUP3 DUP6 ADD PUSH2 0x401 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x465 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x481 DUP2 PUSH2 0x46C JUMP JUMPDEST DUP2 EQ PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x49E DUP2 PUSH2 0x478 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4B9 PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP5 DUP3 DUP6 ADD PUSH2 0x48F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 SWAP13 ISZERO CALL 0xE0 SWAP14 0xCB CALLDATACOPY ADDRESS 0xD9 PUSH24 0xAB97B80CC5B4BD32134BEAAC0211C7ED679B47451D64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "175:1262:0:-:0;;;306:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;360:5;344:6;;:22;;;;;;;;;;;;;;;;;;392:5;377:12;;:20;;;;;;;;;;;;;;;;;;306:99;175:1262;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;175:1262:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getSmartContractBalanceSC_85": {
									"entryPoint": 199,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSmartContractBalance_73": {
									"entryPoint": 361,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stake_59": {
									"entryPoint": 561,
									"id": 59,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@tokenAddress_7": {
									"entryPoint": 523,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3934:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:2",
														"type": ""
													}
												],
												"src": "442:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "619:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "629:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "601:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "611:7:2",
														"type": ""
													}
												],
												"src": "574:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:2",
														"type": ""
													}
												],
												"src": "676:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:2",
														"type": ""
													}
												],
												"src": "800:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:2",
														"type": ""
													}
												],
												"src": "1028:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:2"
															},
															"nodeType": "YulIf",
															"src": "1408:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:2",
														"type": ""
													}
												],
												"src": "1355:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:2",
														"type": ""
													}
												],
												"src": "1483:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1671:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1728:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1740:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1730:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1730:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1694:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1719:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1701:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1701:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1691:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1691:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:43:2"
															},
															"nodeType": "YulIf",
															"src": "1681:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:2",
														"type": ""
													}
												],
												"src": "1628:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1840:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1827:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1827:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1818:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1883:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1856:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1856:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1786:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1794:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1802:5:2",
														"type": ""
													}
												],
												"src": "1756:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2030:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2032:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2032:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2032:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2005:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2001:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:32:2"
															},
															"nodeType": "YulIf",
															"src": "1994:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2123:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2138:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2142:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2167:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2202:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2213:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2198:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2198:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2222:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2177:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2177:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2167:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2250:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2265:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2269:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2295:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2330:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2341:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2326:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2326:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2350:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2305:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2295:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1946:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1957:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1969:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1977:6:2",
														"type": ""
													}
												],
												"src": "1901:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2444:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2454:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2463:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2454:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2512:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2485:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2485:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2422:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2430:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2438:5:2",
														"type": ""
													}
												],
												"src": "2381:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2607:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2653:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2655:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2655:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2655:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2628:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2637:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2624:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2620:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:32:2"
															},
															"nodeType": "YulIf",
															"src": "2617:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2746:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2761:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2775:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2765:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2790:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2836:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2847:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2832:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2832:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2856:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2800:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2800:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2790:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2577:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2588:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2600:6:2",
														"type": ""
													}
												],
												"src": "2530:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3013:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3023:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3035:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3046:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3031:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3023:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3103:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3116:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3127:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3112:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3059:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3059:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3184:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3197:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3208:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3193:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3193:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3140:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2977:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2989:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2997:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3008:4:2",
														"type": ""
													}
												],
												"src": "2887:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3267:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3277:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3302:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3295:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3295:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3288:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3277:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3249:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3259:7:2",
														"type": ""
													}
												],
												"src": "3225:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3361:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3415:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3424:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3427:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3417:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3417:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3417:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3384:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3406:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3391:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3391:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3381:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3374:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3374:40:2"
															},
															"nodeType": "YulIf",
															"src": "3371:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3354:5:2",
														"type": ""
													}
												],
												"src": "3321:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3503:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3513:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3528:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3522:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3513:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3568:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3544:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3544:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3544:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3481:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3489:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3497:5:2",
														"type": ""
													}
												],
												"src": "3443:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3660:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3706:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3708:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3708:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3708:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3681:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3677:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3673:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3673:32:2"
															},
															"nodeType": "YulIf",
															"src": "3670:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3799:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3814:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3828:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3818:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3843:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3886:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3897:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3882:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3882:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3906:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3853:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3853:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3843:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3630:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3641:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3653:6:2",
														"type": ""
													}
												],
												"src": "3586:345:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806304a26112146100515780635145cbc01461006f5780639d76ea581461008d578063adc9772e146100ab575b600080fd5b6100596100c7565b60405161006691906102ed565b60405180910390f35b610077610169565b60405161008491906102ed565b60405180910390f35b61009561020b565b6040516100a29190610349565b60405180910390f35b6100c560048036038101906100c091906103c1565b610231565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101239190610349565b602060405180830381865afa158015610140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101649190610416565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101c59190610349565b602060405180830381865afa1580156101e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102069190610416565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161028c929190610443565b6020604051808303816000875af11580156102ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cf91906104a4565b505050565b6000819050919050565b6102e7816102d4565b82525050565b600060208201905061030260008301846102de565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033382610308565b9050919050565b61034381610328565b82525050565b600060208201905061035e600083018461033a565b92915050565b600080fd5b61037281610328565b811461037d57600080fd5b50565b60008135905061038f81610369565b92915050565b61039e816102d4565b81146103a957600080fd5b50565b6000813590506103bb81610395565b92915050565b600080604083850312156103d8576103d7610364565b5b60006103e685828601610380565b92505060206103f7858286016103ac565b9150509250929050565b60008151905061041081610395565b92915050565b60006020828403121561042c5761042b610364565b5b600061043a84828501610401565b91505092915050565b6000604082019050610458600083018561033a565b61046560208301846102de565b9392505050565b60008115159050919050565b6104818161046c565b811461048c57600080fd5b50565b60008151905061049e81610478565b92915050565b6000602082840312156104ba576104b9610364565b5b60006104c88482850161048f565b9150509291505056fea2646970667358221220b69c15f1e09dcb3730d977ab97b80cc5b4bd32134beaac0211c7ed679b47451d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A26112 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5145CBC0 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x416 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x416 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP3 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E7 DUP2 PUSH2 0x2D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x302 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x333 DUP3 PUSH2 0x308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x328 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x372 DUP2 PUSH2 0x328 JUMP JUMPDEST DUP2 EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38F DUP2 PUSH2 0x369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x2D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BB DUP2 PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D7 PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP6 DUP3 DUP7 ADD PUSH2 0x380 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F7 DUP6 DUP3 DUP7 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x410 DUP2 PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43A DUP5 DUP3 DUP6 ADD PUSH2 0x401 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x465 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x481 DUP2 PUSH2 0x46C JUMP JUMPDEST DUP2 EQ PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x49E DUP2 PUSH2 0x478 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4B9 PUSH2 0x364 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP5 DUP3 DUP6 ADD PUSH2 0x48F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 SWAP13 ISZERO CALL 0xE0 SWAP14 0xCB CALLDATACOPY ADDRESS 0xD9 PUSH24 0xAB97B80CC5B4BD32134BEAAC0211C7ED679B47451D64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "175:1262:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:119;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1120:120;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;225:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;952:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1315:119;1374:4;1398:6;;;;;;;;;;;:16;;;1415:10;1398:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1391:35;;1315:119;:::o;1120:120::-;1177:4;1201:6;;;;;;;;;;;:16;;;1226:4;1201:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1194:38;;1120:120;:::o;225:27::-;;;;;;;;;;;;;:::o;952:93::-;1010:6;;;;;;;;;;:15;;;1026:2;1030:6;1010:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;952:93;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:122::-;1701:24;1719:5;1701:24;:::i;:::-;1694:5;1691:35;1681:63;;1740:1;1737;1730:12;1681:63;1628:122;:::o;1756:139::-;1802:5;1840:6;1827:20;1818:29;;1856:33;1883:5;1856:33;:::i;:::-;1756:139;;;;:::o;1901:474::-;1969:6;1977;2026:2;2014:9;2005:7;2001:23;1997:32;1994:119;;;2032:79;;:::i;:::-;1994:119;2152:1;2177:53;2222:7;2213:6;2202:9;2198:22;2177:53;:::i;:::-;2167:63;;2123:117;2279:2;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2250:118;1901:474;;;;;:::o;2381:143::-;2438:5;2469:6;2463:13;2454:22;;2485:33;2512:5;2485:33;:::i;:::-;2381:143;;;;:::o;2530:351::-;2600:6;2649:2;2637:9;2628:7;2624:23;2620:32;2617:119;;;2655:79;;:::i;:::-;2617:119;2775:1;2800:64;2856:7;2847:6;2836:9;2832:22;2800:64;:::i;:::-;2790:74;;2746:128;2530:351;;;;:::o;2887:332::-;3008:4;3046:2;3035:9;3031:18;3023:26;;3059:71;3127:1;3116:9;3112:17;3103:6;3059:71;:::i;:::-;3140:72;3208:2;3197:9;3193:18;3184:6;3140:72;:::i;:::-;2887:332;;;;;:::o;3225:90::-;3259:7;3302:5;3295:13;3288:21;3277:32;;3225:90;;;:::o;3321:116::-;3391:21;3406:5;3391:21;:::i;:::-;3384:5;3381:32;3371:60;;3427:1;3424;3417:12;3371:60;3321:116;:::o;3443:137::-;3497:5;3528:6;3522:13;3513:22;;3544:30;3568:5;3544:30;:::i;:::-;3443:137;;;;:::o;3586:345::-;3653:6;3702:2;3690:9;3681:7;3677:23;3673:32;3670:119;;;3708:79;;:::i;:::-;3670:119;3828:1;3853:61;3906:7;3897:6;3886:9;3882:22;3853:61;:::i;:::-;3843:71;;3799:125;3586:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "257400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getSmartContractBalance()": "infinite",
								"getSmartContractBalanceSC()": "infinite",
								"stake(address,uint256)": "infinite",
								"tokenAddress()": "2536"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 1437,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 405,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 405,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 405,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 306,
									"end": 405,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 306,
									"end": 405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 306,
									"end": 405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 360,
									"end": 365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 344,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 344,
									"end": 366,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 344,
									"end": 366,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 344,
									"end": 366,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 344,
									"end": 366,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 392,
									"end": 397,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 397,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 306,
									"end": 405,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1437,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b69c15f1e09dcb3730d977ab97b80cc5b4bd32134beaac0211c7ed679b47451d64736f6c63430008120033",
									".code": [
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "4A26112"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "5145CBC0"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "9D76EA58"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "ADC9772E"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 1437,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1315,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1315,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1120,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1120,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 225,
											"end": 252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 225,
											"end": 252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 952,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 952,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1398,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1398,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1398,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1201,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 225,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 225,
											"end": 252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1010,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1010,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 952,
											"end": 1045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1726,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1742,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1847,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1883,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1856,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2032,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2211,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2177,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2305,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2524,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2381,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2476,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2512,
											"end": 2517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2485,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2518,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2485,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2881,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2530,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2647,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2652,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2655,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2800,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2864,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2881,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3219,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2887,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3059,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3208,
											"end": 3210,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3140,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3212,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3140,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3219,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3219,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3315,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3225,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3308,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3309,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3321,
											"end": 3437,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3321,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3406,
											"end": 3411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3391,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3412,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3391,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3413,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3371,
											"end": 3431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3427,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3431,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3371,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3321,
											"end": 3437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3321,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3580,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3443,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3568,
											"end": 3573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3544,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3574,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3544,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3580,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3931,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3586,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3688,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3700,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3705,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3670,
											"end": 3789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3708,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3708,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3787,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3708,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3670,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 3904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3853,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3914,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3853,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"Defi-project/assetsTransfer/tokenTransfer.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getSmartContractBalance()": "5145cbc0",
							"getSmartContractBalanceSC()": "04a26112",
							"stake(address,uint256)": "adc9772e",
							"tokenAddress()": "9d76ea58"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getSmartContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSmartContractBalanceSC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Defi-project/assetsTransfer/tokenTransfer.sol\":\"TokenTransfer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Defi-project/assetsTransfer/tokenTransfer.sol\":{\"keccak256\":\"0x29307f04e2165d409df165762d5ae5bf9e25398f40ba7f0ba71ac109d1cc05ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db7fc9c7921fa126e7d2b6ad2a7237f27fc5e3830a6c8f3e929bcec96d2d81fb\",\"dweb:/ipfs/QmZFzhuvWwJQmVcPEYcfajcfDXcBbS6gA9zAu3iY1QKxr3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "Defi-project/assetsTransfer/tokenTransfer.sol:TokenTransfer",
								"label": "_token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)164"
							},
							{
								"astId": 7,
								"contract": "Defi-project/assetsTransfer/tokenTransfer.sol:TokenTransfer",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)164": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Defi-project/assetsTransfer/tokenTransfer.sol": {
				"ast": {
					"absolutePath": "Defi-project/assetsTransfer/tokenTransfer.sol",
					"exportedSymbols": {
						"IERC20": [
							164
						],
						"TokenTransfer": [
							86
						]
					},
					"id": 87,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 87,
							"sourceUnit": 165,
							"src": "60:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenTransfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "TokenTransfer",
							"nameLocation": "184:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "212:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "205:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$164",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 4,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3,
											"name": "IERC20",
											"nameLocations": [
												"205:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 164,
											"src": "205:6:0"
										},
										"referencedDeclaration": 164,
										"src": "205:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$164",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 7,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "240:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "225:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "225:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "333:72:0",
										"statements": [
											{
												"expression": {
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "344:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$164",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 14,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "360:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 13,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "353:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$164_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "353:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$164",
															"typeString": "contract IERC20"
														}
													},
													"src": "344:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$164",
														"typeString": "contract IERC20"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "344:22:0"
											},
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "377:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 19,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "392:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "377:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "377:20:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "326:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "318:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:15:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:0:0"
									},
									"scope": 86,
									"src": "306:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "492:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 30,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "528:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "532:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "528:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 34,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "548:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenTransfer_$86",
																					"typeString": "contract TokenTransfer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenTransfer_$86",
																					"typeString": "contract TokenTransfer"
																				}
																			],
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "540:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 32,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "540:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "540:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 28,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "511:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$164",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "518:9:0",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "511:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "511:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 37,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "558:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "511:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f72",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "566:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
																"typeString": "literal_string \"Error\""
															},
															"value": "Error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
																"typeString": "literal_string \"Error\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "503:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "503:71:0"
											},
											{
												"id": 42,
												"nodeType": "PlaceholderStatement",
												"src": "585:1:0"
											}
										]
									},
									"id": 44,
									"name": "checkAllowance",
									"nameLocation": "464:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "484:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "479:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:13:0"
									},
									"src": "455:139:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "999:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 54,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1026:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 55,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1030:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 51,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1010:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1017:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 131,
														"src": "1010:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "1010:27:0"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "961:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "975:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "967:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "984:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "979:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:25:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:0:0"
									},
									"scope": 86,
									"src": "952:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1183:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 68,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1226:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenTransfer_$86",
																		"typeString": "contract TokenTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenTransfer_$86",
																		"typeString": "contract TokenTransfer"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1218:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1218:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1218:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 64,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1201:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1208:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "1201:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1201:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 63,
												"id": 71,
												"nodeType": "Return",
												"src": "1194:38:0"
											}
										]
									},
									"functionSelector": "5145cbc0",
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSmartContractBalance",
									"nameLocation": "1129:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1152:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1177:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:6:0"
									},
									"scope": 86,
									"src": "1120:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1380:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 80,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1415:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1419:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 78,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1398:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1405:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "1398:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1398:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 77,
												"id": 83,
												"nodeType": "Return",
												"src": "1391:35:0"
											}
										]
									},
									"functionSelector": "04a26112",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSmartContractBalanceSC",
									"nameLocation": "1324:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1349:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:6:0"
									},
									"scope": 86,
									"src": "1315:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 87,
							"src": "175:1262:0",
							"usedErrors": []
						}
					],
					"src": "33:1576:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 88,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 89,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 98,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 107,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 164,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 164,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 164,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 164,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 164,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 164,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			}
		}
	}
}